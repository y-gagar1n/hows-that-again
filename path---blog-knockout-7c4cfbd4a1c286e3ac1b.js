webpackJsonp([0xb38b648a4544],{415:function(t,e){t.exports={data:{markdownRemark:{html:'<h1>Knockout</h1>\n<p>В общем-то похож на Angular. В разметке можно указывать атрибут data-bind и ему в значение указывать</p>\n<p>key-value пары, где key = text, или attr, а value = поле модели, если text, или Json с атрибутами, если attr</p>\n<p>Например</p>\n<pre><code>&#x3C;a data-bind="attr: { href: twitterUrl}, text: twitterAlias" >&#x3C;/a>\n</code></pre>\n<p>В качестве полей модели можно указывать и функции, например:</p>\n<pre><code class="language-js">var viewModel = {\n    authorName: ko.observable(\'Steve Smith\'),\n    twitterAlias: ko.observable(\'@ardalis\'),\n    twitterUrl: ko.computed(function() {\n        return "https://twitter.com/";\n    }, this)\n};\n</code></pre>\n<p>Модели привязываются командой <code>ko.applyBindings(model)</code></p>\n<p>Чтобы связь с полем модели была 2-сторонней, используется <code>ko.observable</code>, как выше.</p>',frontmatter:{path:"/blog/knockout",title:"Knockout"}}},pathContext:{}}}});
//# sourceMappingURL=path---blog-knockout-7c4cfbd4a1c286e3ac1b.js.map