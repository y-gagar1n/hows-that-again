{"version":3,"sources":["webpack:///path---blog-mvc-sessionless-state-12281ec2091582c9e1ae.js","webpack:///./.cache/json/blog-mvc-sessionless-state.json"],"names":["webpackJsonp","439","module","exports","data","markdownRemark","html","frontmatter","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,49BAAAC,aAAk/BC,KAAA,8BAAAC,MAAA,sCAAkFC","file":"path---blog-mvc-sessionless-state-12281ec2091582c9e1ae.js","sourcesContent":["webpackJsonp([94230034957513],{\n\n/***/ 439:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Sessionless state in ASP.NET MVC</h1>\\n<p>Зачем: при использовании сессий ASP.NET предполагает, что одновременно от одной сессии будет только один запрос. Если со страницы идет несколько AJAX-запросов одновременно, то они будут обработаны последовательно. Если же использовать взаимодействие без сессий, то на сервере они могут быть обработаны и параллельно. Особенно это подходит для страниц, которые при загрузке делают несколько запросов чтобы отобразить содержимое каких-нибудь контролов. </p>\\n<h2>Как сделать</h2>\\n<p>существует несколько механизмов</p>\\n<ol>\\n<li>создать уникальный идентификатор при первом запросе и передавать его от запроса к запросу в адресной строке</li>\\n<li>использовать для передачи элемент hidden</li>\\n<li>использовать какой-либо элемент в Master Page, чтобы этот идентификатор отображался сразу на всех страницах</li>\\n<li>Хранить его на клиентской стороне в sessionStorage или localStorage и передавать его на сервер когда необходимо</li>\\n</ol>\",\"frontmatter\":{\"path\":\"/blog/mvc-sessionless-state\",\"title\":\"Sessionless state in ASP.NET MVC\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-mvc-sessionless-state-12281ec2091582c9e1ae.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Sessionless state in ASP.NET MVC</h1>\\n<p>Зачем: при использовании сессий ASP.NET предполагает, что одновременно от одной сессии будет только один запрос. Если со страницы идет несколько AJAX-запросов одновременно, то они будут обработаны последовательно. Если же использовать взаимодействие без сессий, то на сервере они могут быть обработаны и параллельно. Особенно это подходит для страниц, которые при загрузке делают несколько запросов чтобы отобразить содержимое каких-нибудь контролов. </p>\\n<h2>Как сделать</h2>\\n<p>существует несколько механизмов</p>\\n<ol>\\n<li>создать уникальный идентификатор при первом запросе и передавать его от запроса к запросу в адресной строке</li>\\n<li>использовать для передачи элемент hidden</li>\\n<li>использовать какой-либо элемент в Master Page, чтобы этот идентификатор отображался сразу на всех страницах</li>\\n<li>Хранить его на клиентской стороне в sessionStorage или localStorage и передавать его на сервер когда необходимо</li>\\n</ol>\",\"frontmatter\":{\"path\":\"/blog/mvc-sessionless-state\",\"title\":\"Sessionless state in ASP.NET MVC\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-mvc-sessionless-state.json\n// module id = 439\n// module chunks = 94230034957513"],"sourceRoot":""}