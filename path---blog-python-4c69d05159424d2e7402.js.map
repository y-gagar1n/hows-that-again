{"version":3,"sources":["webpack:///path---blog-python-4c69d05159424d2e7402.js","webpack:///./.cache/json/blog-python.json"],"names":["webpackJsonp","475","module","exports","data","markdownRemark","html","frontmatter","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,u1CAAszBC,aAAqlBC,KAAA,eAAAC,MAAA,YAAyCC","file":"path---blog-python-4c69d05159424d2e7402.js","sourcesContent":["webpackJsonp([105666842049118],{\n\n/***/ 475:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Python</h1>\\n<h2>Конфигурация</h2>\\n<p>Можно создать файл <code>config.py</code>:</p>\\n<pre><code class=\\\"language-python\\\">key = \\\"YOUR_KEY\\\"\\nsecret = \\\"YOUR_SECRET\\\"\\n</code></pre>\\n<p>В основном тексте программы ссылаться на него так:</p>\\n<pre><code class=\\\"language-python\\\">import config\\n\\nconfig.key\\n</code></pre>\\n<h2>Чтение из стандартного инпута</h2>\\n<h3>В цикле</h3>\\n<pre><code class=\\\"language-python\\\">import sys\\n\\nfor line in sys.stdin:\\n    print(line.rstrip()) # rstrip нужен, чтобы не выводить символ перевода строки\\n</code></pre>\\n<h3>Чтение всех разом</h3>\\n<pre><code class=\\\"language-python\\\">import sys\\n\\nlines = sys.stdin.readlines()\\nfor line in lines:\\n    print(line)\\n</code></pre>\\n<h3>Проверка</h3>\\n<pre><code class=\\\"language-sh\\\">$ echo \\\"qwe\\\\nasd\\\" > text &#x26;&#x26; cat text | python3 main.py\\nqwe\\nasd\\n</code></pre>\\n<p>Если вводим инпут через терминал, то можем завершить ввод через <code>Ctrl + D</code>.</p>\\n<h3>Чтение бинарного файла и запись его в кодировке UTF-8</h3>\\n<pre><code class=\\\"language-python\\\">input = open(\\\"/home/y/photos/4.jpeg\\\", \\\"rb\\\")\\noutput = open(\\\"/home/y/photos/dump4.txt\\\", \\\"wb+\\\")\\n\\ninput_text = input.read().decode(\\\"latin-1\\\") // read возвращает bytes, decode возвращает строку\\noutput.write(input_text.encode(\\\"utf-8\\\"))  // encode принимает строку, возвращает строку, но в другой кодировке\\n</code></pre>\",\"frontmatter\":{\"path\":\"/blog/python\",\"title\":\"Python\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-python-4c69d05159424d2e7402.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Python</h1>\\n<h2>Конфигурация</h2>\\n<p>Можно создать файл <code>config.py</code>:</p>\\n<pre><code class=\\\"language-python\\\">key = \\\"YOUR_KEY\\\"\\nsecret = \\\"YOUR_SECRET\\\"\\n</code></pre>\\n<p>В основном тексте программы ссылаться на него так:</p>\\n<pre><code class=\\\"language-python\\\">import config\\n\\nconfig.key\\n</code></pre>\\n<h2>Чтение из стандартного инпута</h2>\\n<h3>В цикле</h3>\\n<pre><code class=\\\"language-python\\\">import sys\\n\\nfor line in sys.stdin:\\n    print(line.rstrip()) # rstrip нужен, чтобы не выводить символ перевода строки\\n</code></pre>\\n<h3>Чтение всех разом</h3>\\n<pre><code class=\\\"language-python\\\">import sys\\n\\nlines = sys.stdin.readlines()\\nfor line in lines:\\n    print(line)\\n</code></pre>\\n<h3>Проверка</h3>\\n<pre><code class=\\\"language-sh\\\">$ echo \\\"qwe\\\\nasd\\\" > text &#x26;&#x26; cat text | python3 main.py\\nqwe\\nasd\\n</code></pre>\\n<p>Если вводим инпут через терминал, то можем завершить ввод через <code>Ctrl + D</code>.</p>\\n<h3>Чтение бинарного файла и запись его в кодировке UTF-8</h3>\\n<pre><code class=\\\"language-python\\\">input = open(\\\"/home/y/photos/4.jpeg\\\", \\\"rb\\\")\\noutput = open(\\\"/home/y/photos/dump4.txt\\\", \\\"wb+\\\")\\n\\ninput_text = input.read().decode(\\\"latin-1\\\") // read возвращает bytes, decode возвращает строку\\noutput.write(input_text.encode(\\\"utf-8\\\"))  // encode принимает строку, возвращает строку, но в другой кодировке\\n</code></pre>\",\"frontmatter\":{\"path\":\"/blog/python\",\"title\":\"Python\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-python.json\n// module id = 475\n// module chunks = 105666842049118"],"sourceRoot":""}