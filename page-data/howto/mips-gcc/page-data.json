{"componentChunkName":"component---src-templates-blog-template-js","path":"/howto/mips-gcc","webpackCompilationHash":"4db6669e02d28ef65e0b","result":{"data":{"markdownRemark":{"html":"<h1>Как сбилдить GCC для компиляции под MIPS на OS X</h1>\n<p>Для начала устанавливаем gcc нужной версии:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> -R <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">whoami</span><span class=\"token variable\">)</span></span> /usr/local/share/man/man8. <span class=\"token comment\"># почему-то без этой строчки brew ругался</span>\nbrew <span class=\"token function\">install</span> gcc@4.9</code></pre></div>\n<p>Brew устанавливает все в свою папку <code class=\"language-text\">/usr/local/Cellar/</code>, после чего делает симлинки в папке <code class=\"language-text\">/usr/loca/bin</code>.</p>\n<p>Таким образом, после установки gcc@4.9 в папке <code class=\"language-text\">/usr/local/bin</code> появятся бинарники <strong>gcc-4.9</strong>, <strong>g++-4.9</strong>, <strong>cpp-4.9</strong> и прочие, которые будут симлинками в папку <code class=\"language-text\">/usr/local/Cellar/gcc@4.9/4.9.4_1/bin</code>.</p>\n<p>Теперь мы используем их, чтобы сбилдить <code class=\"language-text\">binutils</code> под MIPS, но сначала выставим соответствующие переменные окружения:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CC</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">which</span> gcc-4.9<span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CXX</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">which</span> g++-4.9<span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CPP</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">which</span> cpp-4.9<span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LD</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">which</span> gcc-4.9<span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PREFIX</span><span class=\"token operator\">=</span>/opt/cross/gcc-mips\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CFLAGS</span><span class=\"token operator\">=</span>-Wno-error<span class=\"token operator\">=</span>deprecated-declarations\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CPPFLAGS</span><span class=\"token operator\">=</span>-Wno-error<span class=\"token operator\">=</span>unused-value\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CPATH</span><span class=\"token operator\">=</span>/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/ </code></pre></div>\n<p>Здесь важно обратить внимание на:</p>\n<ul>\n<li><code class=\"language-text\">PREFIX</code>: путь установки</li>\n<li><code class=\"language-text\">CPATH</code>: папка инклюдов для компиляторов С и С++. В указанной папке хранятся все системные заголовки после установки XCode. Без указания этой переменной компиляция ругалась на ненайденный <code class=\"language-text\">stdio.h</code></li>\n<li><code class=\"language-text\">CFLAGS</code>, <code class=\"language-text\">CPPFLAGS</code>: замалчивают некоторые варнинги, чтобы они не приводили к ошибкам. Иначе не билдится.</li>\n</ul>\n<p>Теперь непосредственно качаем и билдим binutils:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">wget</span> ftp://sourceware.org/pub/binutils/releases/binutils-2.24.tar.gz\n\n<span class=\"token function\">tar</span> xzf binutils-2.24.tar.gz\n<span class=\"token function\">mkdir</span> binutils-build\n<span class=\"token builtin class-name\">cd</span> binutils-build\n\n<span class=\"token punctuation\">..</span>/binutils-2.24/configure --target<span class=\"token operator\">=</span>mips-netbsd-elf --prefix<span class=\"token operator\">=</span><span class=\"token variable\">$PREFIX</span>\n<span class=\"token function\">make</span> all <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> make.log\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></code></pre></div>\n<p>После установки в папке <code class=\"language-text\">/opt/cross/gcc-mips/bin</code> будут лежать утилиты binutils, скомпилированные под MIPS. Этот адрес добавляем в PATH:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token variable\">${PREFIX}</span>/bin:<span class=\"token variable\">${<span class=\"token environment constant\">PATH</span>}</span></code></pre></div>\n<p>Дальше компилируем gcc:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">wget</span> http://www.netgull.com/gcc/releases/gcc-4.8.2/gcc-4.8.2.tar.gz  \n<span class=\"token function\">tar</span> xzf gcc-4.8.2.tar.gz\n<span class=\"token builtin class-name\">cd</span> gcc-4.8.2\n./contrib/download_prerequisites\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\n<span class=\"token function\">mkdir</span> gcc-build\n<span class=\"token builtin class-name\">cd</span> gcc-build\n<span class=\"token punctuation\">..</span>/gcc-4.8.2/configure --target<span class=\"token operator\">=</span>mips-netbsd-elf --prefix<span class=\"token operator\">=</span><span class=\"token variable\">$PREFIX</span> --with-newlib --without-headers --with-gnu-as --with-gnu-ld --disable-shared --enable-languages<span class=\"token operator\">=</span>c\n<span class=\"token function\">make</span> all-gcc <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> make.log\n<span class=\"token function\">make</span> install-gcc</code></pre></div>\n<p>После установки в папке <code class=\"language-text\">/opt/cross/gcc-mips/bin</code>, помимо утилит binutils, будут еще и утилиты gcc, скомпилированные под MIPS.</p>\n<p>Теперь нам нужно установить <strong>newlib</strong> - реализация стандартной библиотеки языка C для встраиваемых системах:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">wget</span> ftp://sourceware.org/pub/newlib/newlib-2.1.0.tar.gz\n<span class=\"token function\">tar</span> xzf newlib-2.1.0.tar.gz\n<span class=\"token function\">mkdir</span> newlib-build\n<span class=\"token builtin class-name\">cd</span> newlib-build\n\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">CPATH</span><span class=\"token operator\">=</span>\n\n<span class=\"token punctuation\">..</span>/newlib-2.1.0/configure --target<span class=\"token operator\">=</span>mips-netbsd-elf --prefix<span class=\"token operator\">=</span><span class=\"token variable\">$PREFIX</span>\n<span class=\"token function\">make</span> all <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> make.log\n<span class=\"token function\">make</span> <span class=\"token function\">install</span></code></pre></div>","frontmatter":{"path":"/howto/mips-gcc","title":"Как сбилдить GCC для компилции под MIPS на OS X"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}