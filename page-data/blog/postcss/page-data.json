{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/postcss","webpackCompilationHash":"6b5cb62c7748e8ab82b3","result":{"data":{"markdownRemark":{"html":"<h1>PostCSS</h1>\n<h2>Конфигурация</h2>\n<p>В конфиге postcss есть переменная <code class=\"language-text\">path</code>  и в документации указано, что она указывает путь к конфигу, так вот она <strong>НИФИГА</strong> не указывает путь к конфигу, а указывает папку, в которой будет искаться конфиг. Это значит, что нельзя использовать нестандартные имена конфига помимо <code class=\"language-text\">postcss.config.js</code>, <code class=\"language-text\">.postcssrc</code> и прочих, которые используются в <code class=\"language-text\">cosmoconfig</code>. </p>\n<p>Ишью на эту тему: <a href=\"https://github.com/michael-ciniawsky/postcss-load-config/issues/127\">https://github.com/michael-ciniawsky/postcss-load-config/issues/127</a>\n<a href=\"https://github.com/postcss/postcss-loader/issues/358\">https://github.com/postcss/postcss-loader/issues/358</a></p>\n<h2>Пример простого пгагин</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> postcss <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postcss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> postcss<span class=\"token punctuation\">.</span><span class=\"token function\">plugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postcss-simple-test'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">opts</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    opts <span class=\"token operator\">=</span> opts <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">root<span class=\"token punctuation\">,</span> result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        root<span class=\"token punctuation\">.</span><span class=\"token function\">walkRules</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">rule</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\">// проходим по всем правилам в css</span>\n            rule<span class=\"token punctuation\">.</span><span class=\"token function\">walkDecls</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/^overflow-?/</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">decl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\">// проходим по всем объявленим свойств в правиле, у которых название свойства удовлетворяет указанному регексу</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>decl<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token string\">'scroll'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">var</span> hasTouch <span class=\"token operator\">=</span> rule<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   <span class=\"token comment\">// возращает true, если какие-то из деклараций в оригинальном правиле удовлетворяют предикату</span>\n                        <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">.</span>prop <span class=\"token operator\">===</span> <span class=\"token string\">'-webkit-overflow-scrolling'</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hasTouch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        rule<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>    <span class=\"token comment\">// дописываем в правило новую декларацию</span>\n                            prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'-webkit-overflow-scrolling'</span><span class=\"token punctuation\">,</span>\n                            value<span class=\"token punctuation\">:</span> <span class=\"token string\">'touch'</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"path":"/blog/postcss","title":"PostCSS"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}