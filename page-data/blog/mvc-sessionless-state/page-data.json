{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/mvc-sessionless-state","result":{"data":{"markdownRemark":{"html":"<h1 id=\"sessionless-state-in-aspnet-mvc\" style=\"position:relative;\"><a href=\"#sessionless-state-in-aspnet-mvc\" aria-label=\"sessionless state in aspnet mvc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sessionless state in ASP.NET MVC</h1>\n<p>Зачем: при использовании сессий ASP.NET предполагает, что одновременно от одной сессии будет только один запрос. Если со страницы идет несколько AJAX-запросов одновременно, то они будут обработаны последовательно. Если же использовать взаимодействие без сессий, то на сервере они могут быть обработаны и параллельно. Особенно это подходит для страниц, которые при загрузке делают несколько запросов чтобы отобразить содержимое каких-нибудь контролов. </p>\n<h2 id=\"как-сделать\" style=\"position:relative;\"><a href=\"#%D0%BA%D0%B0%D0%BA-%D1%81%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C\" aria-label=\"как сделать permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Как сделать</h2>\n<p>существует несколько механизмов</p>\n<ol>\n<li>создать уникальный идентификатор при первом запросе и передавать его от запроса к запросу в адресной строке</li>\n<li>использовать для передачи элемент hidden</li>\n<li>использовать какой-либо элемент в Master Page, чтобы этот идентификатор отображался сразу на всех страницах</li>\n<li>Хранить его на клиентской стороне в sessionStorage или localStorage и передавать его на сервер когда необходимо</li>\n</ol>","frontmatter":{"path":"/blog/mvc-sessionless-state","title":"Sessionless state in ASP.NET MVC"}}},"pageContext":{}},"staticQueryHashes":["3649515864"]}