{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/kotlin","result":{"data":{"markdownRemark":{"html":"<h1 id=\"kotlin\" style=\"position:relative;\"><a href=\"#kotlin\" aria-label=\"kotlin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kotlin</h1>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B9\">Определение функций</a></li>\n<li>\n<p><a href=\"#function-types\">Function types</a></p>\n<ul>\n<li><a href=\"#receiver-type\">Receiver type</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%D0%BB%D1%8F%D0%BC%D0%B1%D0%B4%D1%8B\">Лямбды</a></p>\n<ul>\n<li><a href=\"#it\">it</a></li>\n<li><a href=\"#%D0%B2%D0%BE%D0%B7%D0%B2%D1%80%D0%B0%D1%82-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B8%D0%B7-%D0%BB%D1%8F%D0%BC%D0%B1%D0%B4%D1%8B\">Возврат значения из лямбды</a></li>\n</ul>\n</li>\n<li><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%BF%D0%BE%D0%BB%D1%8F%D1%86%D0%B8%D1%8F-%D1%81%D1%82%D1%80%D0%BE%D0%BA\">Интерполяция строк</a></li>\n<li><a href=\"#raw-strings\">Raw strings</a></li>\n<li><a href=\"#arrays\">Arrays</a></li>\n<li>\n<p><a href=\"#%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-%D1%82%D0%B8%D0%BF%D0%BE%D0%B2\">Приведение типов</a></p>\n<ul>\n<li><a href=\"#%D0%BD%D0%B5%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE%D0%B5\">Небезопасное</a></li>\n<li><a href=\"#%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE%D0%B5-%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5\">Безопасное приведение</a></li>\n</ul>\n</li>\n<li><a href=\"#for-loop\">For loop</a></li>\n<li><a href=\"#when\">When</a></li>\n<li><a href=\"#%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0-%D0%BD%D0%B0-%D0%B2%D1%85%D0%BE%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5\">Проверка на вхождение</a></li>\n<li><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B2%D0%B0%D0%BB%D1%8B\">Интервалы</a></li>\n<li><a href=\"#%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%80%D0%BD%D1%8B%D0%B9-%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80\">Тернарный оператор</a></li>\n<li>\n<p><a href=\"#%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B\">Классы</a></p>\n<ul>\n<li>\n<p><a href=\"#%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D0%BE%D1%80%D1%8B\">Конструкторы</a></p>\n<ul>\n<li><a href=\"#%D0%BF%D0%B5%D1%80%D0%B2%D0%B8%D1%87%D0%BD%D1%8B%D0%B9-%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D0%BE%D1%80\">Первичный конструктор</a></li>\n<li><a href=\"#%D0%B2%D1%82%D0%BE%D1%80%D0%B8%D1%87%D0%BD%D1%8B%D0%B9-%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D0%BE%D1%80\">Вторичный конструктор</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#null-safety\">Null safety</a></p>\n<ul>\n<li><a href=\"#elvis-operator\">Elvis operator</a></li>\n<li><a href=\"#%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80-\">Оператор !!</a></li>\n</ul>\n</li>\n<li><a href=\"#data-classes\">Data classes</a></li>\n<li><a href=\"#%D0%B8%D1%82%D0%B5%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BF%D0%BE-%D1%81%D0%BB%D0%BE%D0%B2%D0%B0%D1%80%D1%8E\">Итерирование по словарю</a></li>\n</ul>\n</div>\n<p>Полная грамматика языка: <a href=\"https://kotlinlang.org/docs/reference/grammar.html\">https://kotlinlang.org/docs/reference/grammar.html</a>\nПолная документация: <a href=\"https://kotlinlang.org/docs/kotlin-docs.pdf\">https://kotlinlang.org/docs/kotlin-docs.pdf</a></p>\n<h2 id=\"определение-функций\" style=\"position:relative;\"><a href=\"#%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B9\" aria-label=\"определение функций permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Определение функций</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">fun</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Int <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Если содержит не более одного выражения, то можно использовать сокращенную версию:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">fun</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b</code></pre></div>\n<p>Если ничего не возвращает, то возвращаемый тип должен быть <code class=\"language-text\">Unit</code>.</p>\n<h2 id=\"function-types\" style=\"position:relative;\"><a href=\"#function-types\" aria-label=\"function types permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Function types</h2>\n<p>Тип-функция имеет такой синтаксис:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"># <span class=\"token punctuation\">(</span>Int<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> String \n<span class=\"token keyword\">val</span> onClick<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> Unit <span class=\"token operator\">=</span> <span class=\"token operator\">..</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">val</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> i<span class=\"token operator\">:</span> Int <span class=\"token operator\">-></span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"receiver-type\" style=\"position:relative;\"><a href=\"#receiver-type\" aria-label=\"receiver type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Receiver type</h3>\n<p>Для типов-фукнций может быть указан тип-получатель:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\">A<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> C</code></pre></div>\n<p>Это значит, что будет вызываться функция с заголовком <code class=\"language-text\">(B) -&gt; C</code> для инстанса типа <code class=\"language-text\">A</code>. К инстансу в теле функции можно будет обратиться через <strong>this</strong>.</p>\n<p>Пример:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> repeatFun<span class=\"token operator\">:</span> String<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>Int<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> String <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> times <span class=\"token operator\">-></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>times<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Причем тип \"функция с ресивером\" взаимозаменяем с типом \"функция без ресивера\", если ресивер во втором случае передавать первым аргументом:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> repeatFun<span class=\"token operator\">:</span> String<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>Int<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> String <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> times <span class=\"token operator\">-></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>times<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">val</span> twoParameters<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">,</span> Int<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> String <span class=\"token operator\">=</span> repeatFun <span class=\"token comment\">// OK</span>\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">runTransformation</span><span class=\"token punctuation\">(</span>f<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">,</span> Int<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> String<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> String <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">val</span> result <span class=\"token operator\">=</span> <span class=\"token function\">runTransformation</span><span class=\"token punctuation\">(</span>repeatFun<span class=\"token punctuation\">)</span> <span class=\"token comment\">// OK</span></code></pre></div>\n<h2 id=\"лямбды\" style=\"position:relative;\"><a href=\"#%D0%BB%D1%8F%D0%BC%D0%B1%D0%B4%D1%8B\" aria-label=\"лямбды permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Лямбды</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">-></span> a<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> sum<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>Int<span class=\"token punctuation\">,</span> Int<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> Int <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> Int <span class=\"token operator\">-></span> x <span class=\"token operator\">+</span> y <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">val</span> sum <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">-></span> x <span class=\"token operator\">+</span> y <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Есть такое соглашение: если последний аргумент функции является функцией, то его можно вынести за скобки:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> product <span class=\"token operator\">=</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">fold</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> acc<span class=\"token punctuation\">,</span> e <span class=\"token operator\">-></span> acc <span class=\"token operator\">*</span> e <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Этот синтаксис называется <em>trailing lambda</em>.</p>\n<h3 id=\"it\" style=\"position:relative;\"><a href=\"#it\" aria-label=\"it permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>it</h3>\n<p>Если у лямбды только 1 аргумент, то при объявлении лямбды список аргументов можно опустить и потом в теле обращаться к аргументу через <strong>it</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\">ints<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span> <span class=\"token punctuation\">{</span> it <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// this literal is of type '(it: Int) -> Boolean'</span></code></pre></div>\n<h3 id=\"возврат-значения-из-лямбды\" style=\"position:relative;\"><a href=\"#%D0%B2%D0%BE%D0%B7%D0%B2%D1%80%D0%B0%D1%82-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B8%D0%B7-%D0%BB%D1%8F%D0%BC%D0%B1%D0%B4%D1%8B\" aria-label=\"возврат значения из лямбды permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Возврат значения из лямбды</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ints.filter {\n    val shouldFilter = it &gt; 0 \n    shouldFilter                # автоматически возвращается результат последнего выражения\n}\n\nints.filter {\n    val shouldFilter = it &gt; 0 \n    return@filter shouldFilter  # если сделать просто return, то произойдет выход из функции, в которой объявляется эта лямбда\n}</code></pre></div>\n<h2 id=\"интерполяция-строк\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%BF%D0%BE%D0%BB%D1%8F%D1%86%D0%B8%D1%8F-%D1%81%D1%82%D1%80%D0%BE%D0%BA\" aria-label=\"интерполяция строк permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Интерполяция строк</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i = <span class=\"token interpolation variable\">$i</span>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, <span class=\"token interpolation\"><span class=\"token delimiter variable\">${</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token delimiter variable\">}</span></span>!\"</span><span class=\"token punctuation\">)</span> # для выражений нужно использовать фигурные скобки</code></pre></div>\n<h2 id=\"raw-strings\" style=\"position:relative;\"><a href=\"#raw-strings\" aria-label=\"raw strings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Raw strings</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> text <span class=\"token operator\">=</span> <span class=\"token raw-string string\">\"\"\"\n    for (c in \"foo\")\n        print(c)\n\"\"\"</span></code></pre></div>\n<h2 id=\"arrays\" style=\"position:relative;\"><a href=\"#arrays\" aria-label=\"arrays permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Arrays</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> a <span class=\"token operator\">=</span> <span class=\"token function\">arrayOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\t# <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">val</span> b <span class=\"token operator\">=</span> <span class=\"token function\">arrayOfNulls</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\t\t# <span class=\"token punctuation\">[</span>Null<span class=\"token punctuation\">,</span>Null<span class=\"token punctuation\">,</span>Null<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">val</span> c <span class=\"token operator\">=</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> i <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\t# <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>В последней строчке вызывается конструктор <code class=\"language-text\">Array</code>, принимающий количество элементов и лямбду-инициализатор, принимающую в <code class=\"language-text\">it</code> индекс элемента. Объявление такого конструктора выглядит так: <code class=\"language-text\">&lt;init&gt;(size: Int, init: (Int) -&gt; T)</code></p>\n<h2 id=\"приведение-типов\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-%D1%82%D0%B8%D0%BF%D0%BE%D0%B2\" aria-label=\"приведение типов permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Приведение типов</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">fun</span> <span class=\"token function\">getStringLength</span><span class=\"token punctuation\">(</span>obj<span class=\"token operator\">:</span> Any<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Int<span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj <span class=\"token keyword\">is</span> String<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">.</span>length <span class=\"token comment\">// no cast to String is needed</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"небезопасное\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B5%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE%D0%B5\" aria-label=\"небезопасное permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Небезопасное</h3>\n<p>Если мы не хотим предварительно проверять тип через <code class=\"language-text\">is</code> и уверены в себе, то можно сразу привести:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> x<span class=\"token operator\">:</span> String <span class=\"token operator\">=</span> y <span class=\"token keyword\">as</span> String</code></pre></div>\n<p>Но следует помнить, что в случае несовместимости типов будет выброшено <code class=\"language-text\">ClassCastException</code>. Если такой вариант не подходит, можно воспользоваться <strong>безопасным приведением</strong>.</p>\n<h3 id=\"безопасное-приведение\" style=\"position:relative;\"><a href=\"#%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE%D0%B5-%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5\" aria-label=\"безопасное приведение permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Безопасное приведение</h3>\n<p>Обычное приведение типа может выбросить ClassCastException если типы несовместимы. Можно использовать безопасное приведение, которое в этом случае вернет null:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> aInt<span class=\"token operator\">:</span> Int<span class=\"token operator\">?</span> <span class=\"token operator\">=</span> a <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> Int</code></pre></div>\n<h2 id=\"for-loop\" style=\"position:relative;\"><a href=\"#for-loop\" aria-label=\"for loop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>For loop</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> items <span class=\"token operator\">=</span> <span class=\"token function\">listOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"kiwifruit\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>item <span class=\"token keyword\">in</span> items<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"when\" style=\"position:relative;\"><a href=\"#when\" aria-label=\"when permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>When</h2>\n<p>Аналог switch-case, только более умный, потому что проверяет не только на равенство, но и другие выражения:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">fun</span> <span class=\"token function\">describe</span><span class=\"token punctuation\">(</span>obj<span class=\"token operator\">:</span> Any<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> String <span class=\"token operator\">=</span>\n    <span class=\"token keyword\">when</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token number\">1</span>          <span class=\"token operator\">-></span> <span class=\"token string\">\"One\"</span>\n        <span class=\"token string\">\"Hello\"</span>    <span class=\"token operator\">-></span> <span class=\"token string\">\"Greeting\"</span>\n        <span class=\"token keyword\">is</span> Long    <span class=\"token operator\">-></span> <span class=\"token string\">\"Long\"</span>\n        <span class=\"token operator\">!</span><span class=\"token keyword\">is</span> String <span class=\"token operator\">-></span> <span class=\"token string\">\"Not a string\"</span>\n        <span class=\"token keyword\">else</span>       <span class=\"token operator\">-></span> <span class=\"token string\">\"Unknown\"</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Выражение when можно даже использовать как значение:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">when</span> <span class=\"token punctuation\">(</span>language<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"EN\"</span> <span class=\"token operator\">-></span> <span class=\"token string\">\"Hello!\"</span>\n    <span class=\"token string\">\"FR\"</span> <span class=\"token operator\">-></span> <span class=\"token string\">\"Salut!\"</span>\n    <span class=\"token string\">\"IT\"</span> <span class=\"token operator\">-></span> <span class=\"token string\">\"Ciao!\"</span>\n    <span class=\"token keyword\">else</span> <span class=\"token operator\">-></span> <span class=\"token string\">\"Sorry, I can't greet you in <span class=\"token interpolation variable\">$language</span> yet\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Выражение <code class=\"language-text\">when</code> может быть хорошей заменой цепочке if-else. Еще примеры:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">when</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s encodes x\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span> <span class=\"token operator\">-></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s does not encode x\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">when</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token operator\">..</span><span class=\"token number\">10</span> <span class=\"token operator\">-></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x is in the range\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">in</span> validNumbers <span class=\"token operator\">-></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x is valid\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">!</span><span class=\"token keyword\">in</span> <span class=\"token number\">10</span><span class=\"token operator\">..</span><span class=\"token number\">20</span> <span class=\"token operator\">-></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x is outside the range\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span> <span class=\"token operator\">-></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"none of the above\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">fun</span> <span class=\"token function\">hasPrefix</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">when</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">is</span> String <span class=\"token operator\">-></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prefix\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span> <span class=\"token operator\">-></span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Можно даже захватывать субъект when (начиная с версии 1.3), пример:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">fun</span> Request<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span>\n        <span class=\"token keyword\">when</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">val</span> response <span class=\"token operator\">=</span> <span class=\"token function\">executeRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">is</span> Success <span class=\"token operator\">-></span> response<span class=\"token punctuation\">.</span>body\n            <span class=\"token keyword\">is</span> HttpError <span class=\"token operator\">-></span> <span class=\"token keyword\">throw</span> <span class=\"token function\">HttpException</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"проверка-на-вхождение\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0-%D0%BD%D0%B0-%D0%B2%D1%85%D0%BE%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5\" aria-label=\"проверка на вхождение permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Проверка на вхождение</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> list <span class=\"token operator\">=</span> <span class=\"token function\">listOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token keyword\">in</span> <span class=\"token number\">0</span><span class=\"token operator\">..</span>list<span class=\"token punctuation\">.</span>lastIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2 is in range\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span>size <span class=\"token operator\">!</span><span class=\"token keyword\">in</span> list<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list size is out of valid list indices range, too\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"интервалы\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B2%D0%B0%D0%BB%D1%8B\" aria-label=\"интервалы permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Интервалы</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token operator\">..</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword\">in</span> <span class=\"token number\">1</span><span class=\"token operator\">..</span><span class=\"token number\">10</span> step <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>x <span class=\"token keyword\">in</span> <span class=\"token number\">9</span> downTo <span class=\"token number\">0</span> step <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"тернарный-оператор\" style=\"position:relative;\"><a href=\"#%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%80%D0%BD%D1%8B%D0%B9-%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80\" aria-label=\"тернарный оператор permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Тернарный оператор</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> language <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"EN\"</span> <span class=\"token keyword\">else</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"классы\" style=\"position:relative;\"><a href=\"#%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B\" aria-label=\"классы permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Классы</h2>\n<h3 id=\"конструкторы\" style=\"position:relative;\"><a href=\"#%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D0%BE%D1%80%D1%8B\" aria-label=\"конструкторы permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Конструкторы</h3>\n<p>У класса может быть первичный конструктор и несколько вторичных.</p>\n<h4 id=\"первичный-конструктор\" style=\"position:relative;\"><a href=\"#%D0%BF%D0%B5%D1%80%D0%B2%D0%B8%D1%87%D0%BD%D1%8B%D0%B9-%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D0%BE%D1%80\" aria-label=\"первичный конструктор permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Первичный конструктор</h4>\n<p>Первичный конструктор является частью заголовка класса и не содержит кода:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> Person <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>firstName<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/*...*/</span> <span class=\"token punctuation\">}</span>\t# вот здесь <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>firstName<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> это и есть первичный конструктор</code></pre></div>\n<p>Если нет никаких атрибутов и модификаторов видимости, то ключевое слово <code class=\"language-text\">constructor</code> можно опустить:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span>firstName<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/*...*/</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Если нужен какой-то код инициализации, то он должен быть помещен в <strong>initializer block</strong>, обозначаемый ключевым словом <code class=\"language-text\">init</code>. Причем таких блоков может быть несколько и при инициализации инстанса они будут выполняться в порядке объявления:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> <span class=\"token function\">InitOrderDemo</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> firstProperty <span class=\"token operator\">=</span> <span class=\"token string\">\"First property: <span class=\"token interpolation variable\">$name</span>\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">also</span><span class=\"token punctuation\">(</span><span class=\"token operator\">::</span>println<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">init</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"First initializer block that prints <span class=\"token interpolation\"><span class=\"token delimiter variable\">${</span>name<span class=\"token delimiter variable\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">val</span> secondProperty <span class=\"token operator\">=</span> <span class=\"token string\">\"Second property: <span class=\"token interpolation\"><span class=\"token delimiter variable\">${</span>name<span class=\"token punctuation\">.</span>length<span class=\"token delimiter variable\">}</span></span>\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">also</span><span class=\"token punctuation\">(</span><span class=\"token operator\">::</span>println<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">init</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Second initializer block that prints <span class=\"token interpolation\"><span class=\"token delimiter variable\">${</span>name<span class=\"token punctuation\">.</span>length<span class=\"token delimiter variable\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>В блоках инициализации и в инициализаторах пропертей могут быть использованы аргументы первичного конструктора:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> <span class=\"token function\">Customer</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> customerKey <span class=\"token operator\">=</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Для объявления и инициализации полей есть специальный синтаксис:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> <span class=\"token function\">Customer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">val</span> name<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Эта запись аналогична:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> <span class=\"token function\">Custom</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">val</span> name<span class=\"token operator\">:</span> String\n\n\t<span class=\"token keyword\">init</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"вторичный-конструктор\" style=\"position:relative;\"><a href=\"#%D0%B2%D1%82%D0%BE%D1%80%D0%B8%D1%87%D0%BD%D1%8B%D0%B9-%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D0%BE%D1%80\" aria-label=\"вторичный конструктор permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Вторичный конструктор</h4>\n<p>Вторичный конструктор обязательно должен иметь ключевое слово <code class=\"language-text\">constructor</code>.</p>\n<p>Если класс имеет первичный конструктор, то каждый вторичный должен ссылаться на него либо прямо, либо опосредованно через другой вторичный конструктор:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">val</span> name<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> children<span class=\"token operator\">:</span> MutableList<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span> <span class=\"token operator\">=</span> mutableListOf<span class=\"token operator\">&lt;</span>Person<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span> parent<span class=\"token operator\">:</span> Person<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        parent<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"null-safety\" style=\"position:relative;\"><a href=\"#null-safety\" aria-label=\"null safety permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Null safety</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">var</span> b<span class=\"token operator\">:</span> String<span class=\"token operator\">?</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"abc\"</span>\n# <span class=\"token keyword\">val</span> l <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>length <span class=\"token comment\">// error: variable 'b' can be null</span>\n<span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">.</span>length <span class=\"token keyword\">else</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\t\t<span class=\"token comment\">// OK</span>\nl <span class=\"token operator\">=</span> b<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>length</code></pre></div>\n<p>Функция <code class=\"language-text\">let</code> позволит выполнить non-null операцию над nullable типом:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\">b<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">let</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"elvis-operator\" style=\"position:relative;\"><a href=\"#elvis-operator\" aria-label=\"elvis operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Elvis operator</h3>\n<p>Позволяет указать дефолтное значение для случая, когда выражение под вопросом равно null:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> l <span class=\"token operator\">=</span> b<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">?:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\t\t# аналогично <span class=\"token keyword\">val</span> l<span class=\"token operator\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">.</span>length <span class=\"token keyword\">else</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>\n<h3 id=\"оператор-\" style=\"position:relative;\"><a href=\"#%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80-\" aria-label=\"оператор  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Оператор !!</h3>\n<p>Превращает любое значение в non-null значение и бросает NUllPointerException если значение равно null.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> l <span class=\"token operator\">=</span> b<span class=\"token operator\">!!</span><span class=\"token punctuation\">.</span>length</code></pre></div>\n<h2 id=\"data-classes\" style=\"position:relative;\"><a href=\"#data-classes\" aria-label=\"data classes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data classes</h2>\n<p>Это классы, которые нужны исключительно для хранения данных.</p>\n<p>Объявление:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">data</span> <span class=\"token keyword\">class</span> <span class=\"token function\">User</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">val</span> name<span class=\"token operator\">:</span> String<span class=\"token punctuation\">,</span> <span class=\"token keyword\">val</span> age<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Для таких классов компилятор автоматически генерирует реализации функций:</p>\n<ul>\n<li><code class=\"language-text\">equals()/hashCode()</code>, если отсутствует явная пользовательская реализация;</li>\n<li><code class=\"language-text\">toString()</code> в форме <code class=\"language-text\">&quot;User(name=John, age=42)&quot;</code>, если отсутствует явная пользовательская реализация;</li>\n<li>функции <code class=\"language-text\">componentN()</code>, необходимые для мульти-деклараций <a href=\"https://kotlinlang.org/docs/reference/multi-declarations.html\">https://kotlinlang.org/docs/reference/multi-declarations.html</a></li>\n<li><code class=\"language-text\">copy()</code></li>\n</ul>\n<p>В сгенерированных функциях участвуют только аргументы первичного конструктора. Если должно быть поле, не участвующее в этих реализациях, то его нужно обновить внутри тела класса:</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">data</span> <span class=\"token keyword\">class</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">val</span> name<span class=\"token operator\">:</span> String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> age<span class=\"token operator\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"итерирование-по-словарю\" style=\"position:relative;\"><a href=\"#%D0%B8%D1%82%D0%B5%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BF%D0%BE-%D1%81%D0%BB%D0%BE%D0%B2%D0%B0%D1%80%D1%8E\" aria-label=\"итерирование по словарю permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Итерирование по словарю</h2>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>args<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> map <span class=\"token operator\">=</span> hashMapOf<span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> Int<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"one\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"two\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> map<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"key = <span class=\"token interpolation variable\">$key</span>, value = <span class=\"token interpolation variable\">$value</span>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"path":"/blog/kotlin","title":"Kotlin"}}},"pageContext":{}},"staticQueryHashes":["3649515864"]}