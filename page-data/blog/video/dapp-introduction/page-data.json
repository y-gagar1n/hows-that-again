{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/video/dapp-introduction","result":{"data":{"markdownRemark":{"html":"<iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/7K6tW_Enhwg?list=PLyKHoHx4tuqoKfxRdDUHfOd3h7Br0f8Ol\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<h1 id=\"dapp\" style=\"position:relative;\"><a href=\"#dapp\" aria-label=\"dapp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dapp</h1>\n<p>Сейчас умеет только собирать образ и складывать в Docker Registry</p>\n<p>Будет поддержка полного цикла CI/CD</p>\n<h2 id=\"требования-к-подобной-системе\" style=\"position:relative;\"><a href=\"#%D1%82%D1%80%D0%B5%D0%B1%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%BA-%D0%BF%D0%BE%D0%B4%D0%BE%D0%B1%D0%BD%D0%BE%D0%B9-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B5\" aria-label=\"требования к подобной системе permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Требования к подобной системе</h2>\n<ul>\n<li>образы должны собираться меньше чем за 10 секунд</li>\n<li>размер образов должен быть меньше 200 МБ</li>\n<li>коммит на 10 КБ должен увеличивать образ на 10 КБ, а не на 400 МБ</li>\n</ul>\n<h2 id=\"проблемы-и-решения\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC%D1%8B-%D0%B8-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D1%8F\" aria-label=\"проблемы и решения permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Проблемы и решения</h2>\n<h3 id=\"стейджи\" style=\"position:relative;\"><a href=\"#%D1%81%D1%82%D0%B5%D0%B9%D0%B4%D0%B6%D0%B8\" aria-label=\"стейджи permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Стейджи</h3>\n<p>В dapp выделили несколько стейджей в процессе сборки:</p>\n<ul>\n<li>before_install</li>\n<li>install</li>\n<li>before_setup</li>\n<li>setup</li>\n</ul>\n<p>Каждый шаг сборки относится к одному из этих стейджей. Идея в том, что те шаги, которые меняются реже, должны выполняться раньше.</p>\n<h3 id=\"внешний-контекст\" style=\"position:relative;\"><a href=\"#%D0%B2%D0%BD%D0%B5%D1%88%D0%BD%D0%B8%D0%B9-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%BA%D1%81%D1%82\" aria-label=\"внешний контекст permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Внешний контекст</h3>\n<p>Если мы одним из шагов в Dockerfile делаем <code class=\"language-text\">RUN apt-get update</code>, то размер образа сильно вырастает.</p>\n<p>Мы можем сделать так:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">RUN apt-get update &amp;&amp; apt-get install -y netcat &amp;&amp; rm -rf /var/lib/apt</code></pre></div>\n<p>Но в этом случае апдейт будет выполняться при каждой сборке и не будет выполняться требование 10 секунд.</p>\n<p><strong>Решение</strong>: маунтить папку <code class=\"language-text\">/var/lib/apt</code> с хоста. Первое построение образа ее заполнит, остальные будут переиспользовать. Если воркеров несколько, то эту папку можно положить на отдельный сервак и пошарить через NFS.</p>\n<p>Можно использовать этот паттерн, например, для: </p>\n<ul>\n<li>apt, yum</li>\n<li>bundler, pip, composer, npm, bower</li>\n<li>ccache, кэш \"сборщика ассетов\"</li>\n</ul>\n<h3 id=\"git\" style=\"position:relative;\"><a href=\"#git\" aria-label=\"git permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>git</h3>\n<p>Добавлять все исходники каждый раз в проект - долго.</p>\n<p>Непонятно, какие стадии пересобирать при добавлении каких файлов.</p>\n<p>Непонятно, как проставлять владельца и права.</p>\n<p><strong>Решение</strong>: в dapp сделали специальный стейдж <code class=\"language-text\">git archive</code> - это выкачивание исходников из репозиторий на момент первой сборки. Этот стейдж идет вторым этапом, между <code class=\"language-text\">before_install</code> и <code class=\"language-text\">install</code>. А последний шаг - <code class=\"language-text\">git patch apply</code>.</p>\n<p>В результате каждый следующий коммит это добавление дельты между архивом и текущим состоянием.</p>\n<p>При этом в dapp мы можем указать, что изменения в каком-либо файле должны приводить к пересборке какого-либо из более ранних стейджей. Например, изменения в <code class=\"language-text\">packages.json</code> должны приводить к пересборке <code class=\"language-text\">install</code>.</p>\n<p>Когда размер дельты между архивом и текущим состоянием достигает 1 МБ - этот патч фиксируется в образе в виде слоя и следующие патчи пойдут уже поверх этого слоя. Когда достигается лимит на количество слоев в образе - пересобирается архив.</p>\n<h3 id=\"артефакты\" style=\"position:relative;\"><a href=\"#%D0%B0%D1%80%D1%82%D0%B5%D1%84%D0%B0%D0%BA%D1%82%D1%8B\" aria-label=\"артефакты permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Артефакты</h3>\n<p>В образе нашего приложения много места занимают всякие сборщики, среды разработки и прочее. То есть собрали приложение нодой, а нода осталась в образе и занимает место. Можно на одном из последующих слоев ее удалить, но размер образа это не изменит, так как она останется в истории слоев.</p>\n<p><strong>Решение</strong>: сборка идет в отдельном образе, после чего артефакты оттуда копируются в отдельный конечный образ.</p>\n<h3 id=\"chef\" style=\"position:relative;\"><a href=\"#chef\" aria-label=\"chef permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chef</h3>\n<p>Там еще какая-то поддержка модулей shell через использование Chef, но я в этом не разбираюсь.</p>","frontmatter":{"path":"/blog/video/dapp-introduction","title":"Собираем Docker-образы быстро и удобно / Дмитрий Столяров (Флант)"}}},"pageContext":{}},"staticQueryHashes":["3649515864"]}