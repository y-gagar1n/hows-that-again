{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/npm","webpackCompilationHash":"c5e22e9dffff1f44e871","result":{"data":{"markdownRemark":{"html":"<h1>npm</h1>\n<p>Вся документация по npm здесь: <a href=\"https://docs.npmjs.com/all\">https://docs.npmjs.com/all</a></p>\n<h2>Синтаксис версий</h2>\n<p><a href=\"https://docs.npmjs.com/files/package.json#dependencies\">Источник</a></p>\n<ul>\n<li><code class=\"language-text\">version</code> Must match <code class=\"language-text\">version</code> exactly</li>\n<li><code class=\"language-text\">&gt;version</code> Must be greater than <code class=\"language-text\">version</code></li>\n<li><code class=\"language-text\">&gt;=version</code> etc</li>\n<li><code class=\"language-text\">&lt;version</code></li>\n<li><code class=\"language-text\">&lt;=version</code></li>\n<li><code class=\"language-text\">~version</code> \"Approximately equivalent to version\" See <a href=\"https://docs.npmjs.com/misc/semver\">semver</a></li>\n<li><code class=\"language-text\">^version</code> \"Compatible with version\" See <a href=\"https://docs.npmjs.com/misc/semver\">semver</a></li>\n<li><code class=\"language-text\">1.2.x</code> 1.2.0, 1.2.1, etc., but not 1.3.0</li>\n<li><code class=\"language-text\">http://...</code> See 'URLs as Dependencies' below</li>\n<li><code class=\"language-text\">*</code> Matches any version</li>\n<li><code class=\"language-text\">&quot;&quot;</code> (just an empty string) Same as <code class=\"language-text\">*</code></li>\n<li><code class=\"language-text\">version1 - version2</code> Same as <code class=\"language-text\">&gt;=version1 &lt;=version2</code>.</li>\n<li><code class=\"language-text\">range1 || range2</code> Passes if either range1 or range2 are satisfied.</li>\n<li><code class=\"language-text\">git...</code> See 'Git URLs as Dependencies' below</li>\n<li><code class=\"language-text\">user/repo</code> See 'GitHub URLs' below</li>\n<li><code class=\"language-text\">tag</code> A specific version tagged and published as <code class=\"language-text\">tag</code> See <code class=\"language-text\">[npm-dist-tag](https://docs.npmjs.com/cli/dist-tag)</code></li>\n<li><code class=\"language-text\">path/path/path</code> See <a href=\"https://docs.npmjs.com/files/package.json#local-paths\">Local Paths</a> below</li>\n</ul>\n<p>Создание нового package.json: <code class=\"language-text\">npm init</code></p>\n<p>Если все настройки нужны дефолтные, то можно <code class=\"language-text\">npm init --yes</code></p>\n<p>При дефолтных настройках будет создан package.json следующего содержания:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"echo \\\"Error: no test specified\\\"\"</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"license\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ISC\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">main</code> - указывает, какой скрипт будет запущен (через <code class=\"language-text\">require</code>), когда кто-то сделает <code class=\"language-text\">require(&#39;./module&#39;)</code>, где <strong>module</strong> - это папка, в которой лежит наш <code class=\"language-text\">package.json</code></p>\n<p><strong>Корневой папкой</strong> для npm считается первая папка по иерархии вверх, начиная с текущей, в которой есть package.json.</p>\n<p><code class=\"language-text\">npm install &lt;module&gt;</code> - установит модуль в корневую папку, но не сохранит его в <code class=\"language-text\">package.json</code>. По умолчанию качается последняя версия.</p>\n<p><code class=\"language-text\">npm install --save &lt;module&gt;</code> - установит модуль в корневую папку и сохранит его в <code class=\"language-text\">package.json</code>. Туда добавляется версия с префиксом ^, то есть версия, совместимая с последней на данный момент.</p>\n<p>Если в <code class=\"language-text\">require</code> указан путь, начинающийся с /, ./ или ../, то ищется файл по указанному относительному пути, начиная с расположения текущего исполняемого файла.</p>\n<p>Когда делается <code class=\"language-text\">require(&#39;&lt;module&gt;&#39;)</code> то сначала в <em>текущей</em> папке ищется папка <strong>node_modules</strong>, затем в ней ищется папка <code class=\"language-text\">&lt;module&gt;</code>, а в ней <code class=\"language-text\">package.json</code>, из которого берется <code class=\"language-text\">main</code> и запускается этот файл. Если что-то в этом пути не найдено, то ищется <code class=\"language-text\">node_modules</code> в папке на 1 уровень выше, затем еще выше и т.д. Если так ничего и не нашлось, то ищет среди глобальных модулей.</p>\n<h2>Глобальные модули</h2>\n<p>Если есть переменная окружения <strong>NODE_PATH</strong>, где через точку с запятой перечислены пути, то сначала модуль ищется там.</p>\n<p>Затем модули ищутся по следующим адресам:</p>\n<ul>\n<li>1: <code class=\"language-text\">$HOME/.node_modules</code></li>\n<li>2: <code class=\"language-text\">$HOME/.node_libraries</code></li>\n<li>3: <code class=\"language-text\">$PREFIX/lib/node</code></li>\n</ul>\n<p>где $HOME - домашняя папка юзера, а $PREFIX - переменная node_prefix (???)</p>\n<p>У меня на домашней машине все глобальные модули ставятся в <strong>\"C:\\Users\\Y\\Application Data\\npm\"</strong></p>\n<p>Если нужно удалить все глобальные модули, то, <em>кажется</em>, можно удалить эту папку. А для локальных - удалить соответствующую <strong>node_modules</strong>. У меня так сработало, но возможно это не во всех случаях поможет. Вообще на этот случай есть модуль <strong>rimraf.</strong></p>\n<p>Документация по модулям в NodeJS: <a href=\"https://nodejs.org/api/modules.html\">https://nodejs.org/api/modules.html</a></p>\n<p><code class=\"language-text\">npm list</code> - выводит список всех установленных в текущем проекте модулей и их версий. Если какой-то модуль перечислен в <strong>packages.json</strong>, но не установлен в текущем проекте, то про него будет ошибка.</p>\n<p><code class=\"language-text\">npm list -g</code> - выводит список глобальных модулей</p>\n<p>В packages.json могут быть описаны несколько скриптов, например:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">\"start\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"react-scripts start\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"build\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"react-scripts build\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"test\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"react-scripts test --env=jsdom\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"eject\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"react-scripts eject\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Вызываются эти скрипты так:</p>\n<p><code class=\"language-text\">npm run start</code>\n<code class=\"language-text\">npm run build</code></p>\n<h2>Локальный тест упаковки пакета**</h2>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> pack //пакуем\n<span class=\"token function\">tar</span> -tf packagename-version.tgz //смотрим, что внутри\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token punctuation\">..</span>/path/to/your/npm/packagename-vesion.tgz //устанавливаем</code></pre></div>\n<h2>Локальный дебаг пакета</h2>\n<p>Допустим, разрабатываем плагин для PostCSS в виде пакета <code class=\"language-text\">postcss-simple-plugin</code> и хотим затестить его в проекте <code class=\"language-text\">postcss-test</code>. Делаем так:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> ~/postcss-simple-plugin\n<span class=\"token function\">npm</span> <span class=\"token function\">link</span>\n<span class=\"token builtin class-name\">cd</span> ~/postcss-test\n<span class=\"token function\">npm</span> <span class=\"token function\">link</span> postcss-simple-plugin</code></pre></div>\n<h2>Размер</h2>\n<h3>Размер бандла</h3>\n<p>Для подсчета размера бандла можно воспользоваться утилитой <code class=\"language-text\">size-limit</code>.</p>\n<p>Пишем в <code class=\"language-text\">package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"size-limit\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"index.js\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>И запускаем в консоли <code class=\"language-text\">size-limit</code> без параметров - он выдаст размер бандла со всеми зависимостями и в сжатом виде.</p>\n<p>Если нужно разобраться, то <code class=\"language-text\">size-limit --why</code>.</p>\n<h3>Размер пакета</h3>\n<p>Здесь поможет утилита <code class=\"language-text\">package-size</code>. Она качает и устанавливает пакет во временную директорию, но работает только для уже опубликованных пакетов. </p>\n<p><code class=\"language-text\">package-size react</code> </p>","frontmatter":{"path":"/blog/npm","title":"npm"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}