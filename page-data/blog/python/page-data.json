{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/python","webpackCompilationHash":"cc00deea99caa92c729f","result":{"data":{"markdownRemark":{"html":"<h1>Python</h1>\n<h2>Конфигурация</h2>\n<p>Можно создать файл <code class=\"language-text\">config.py</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">key <span class=\"token operator\">=</span> <span class=\"token string\">\"YOUR_KEY\"</span>\nsecret <span class=\"token operator\">=</span> <span class=\"token string\">\"YOUR_SECRET\"</span></code></pre></div>\n<p>В основном тексте программы ссылаться на него так:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> config\n\nconfig<span class=\"token punctuation\">.</span>key</code></pre></div>\n<h2>Чтение из стандартного инпута</h2>\n<h3>В цикле</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\n<span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># rstrip нужен, чтобы не выводить символ перевода строки</span></code></pre></div>\n<h3>Чтение всех разом</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n\nlines <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> lines<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Проверка</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"qwe<span class=\"token entity\" title=\"\\n\">\\n</span>asd\"</span> <span class=\"token operator\">></span> text <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cat</span> text <span class=\"token operator\">|</span> python3 main.py\nqwe\nasd</code></pre></div>\n<p>Если вводим инпут через терминал, то можем завершить ввод через <code class=\"language-text\">Ctrl + D</code>.</p>\n<h3>Чтение бинарного файла и запись его в кодировке UTF-8</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home/y/photos/4.jpeg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span>\noutput <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/home/y/photos/dump4.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wb+\"</span><span class=\"token punctuation\">)</span>\n\ninput_text <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"latin-1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> read возвращает <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">,</span> decode возвращает строку\noutput<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>input_text<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">//</span> encode принимает строку<span class=\"token punctuation\">,</span> возвращает строку<span class=\"token punctuation\">,</span> но в другой кодировке</code></pre></div>","frontmatter":{"path":"/blog/python","title":"Python"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}