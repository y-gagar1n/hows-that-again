{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/ssl","webpackCompilationHash":"429002a5e777fda9ec48","result":{"data":{"markdownRemark":{"html":"<h1>SSL</h1>\n<p>Установка соединения обеспечивается в несколько этапов:</p>\n<ol>\n<li>Клиент устанавливает соединение с сервером и запрашивает защищенное подключение. Это может обеспечиваться либо установлением соединения на порт, который изначально предназначен для работы с SSL/TLS, например, 443, либо дополнительным запросом клиентом установки защищенного соединения после установки обычного.</li>\n<li>При установке соединения клиент предоставляет список алгоритмов шифрования, которые он «знает». Сервер сверяет полученный список со списком алгоритмов, которые «знает» сам сервер, и выбирает наиболее надежный алгоритм, после чего сообщает клиенту, какой алгоритм использовать</li>\n<li>Сервер отправляет клиенту свой цифровой сертификат, подписанный удостоверяющим центром, и открытый ключ сервера.</li>\n<li>Клиент может связаться с сервером доверенного центра сертификации, который подписал сертификат сервера, и проверить, валиден ли сертификат сервера. Но может и не связываться. В операционной системе обычно уже установлены корневые сертификаты центров сертификации, с которыми сверяют подписи серверных сертификатов, например, браузеры.</li>\n<li>Генерируется сеансовый ключ для защищенного соединения. Это делается следующим образом:\n— Клиент генерирует случайную цифровую последовательность - сеансовый ключ\n— Клиент шифрует ее открытым ключом сервера и посылает результат на сервер\n— Сервер расшифровывает полученную последовательность при помощи закрытого ключа\nУчитывая, что алгоритм шифрования является асимметричным, расшифровать последовательность может только сервер. При использовании асимметричного шифрования используется два ключа — приватный и публичный. Публичным отправляемое сообщение шифруется, а приватным расшифровывается. Расшифровать сообщение, имея публичный, ключ нельзя.</li>\n<li>Таким образом устанавливается зашифрованное соединение. Данные, передаваемые по нему, шифруются и расшифровываются сеансовым ключом до тех пор, пока соединение не будет разорвано</li>\n</ol>\n<h2>TLS</h2>\n<p>Разницы между SSL и TLS нет, потому что TLS 1.0 = SSL 3.1</p>","frontmatter":{"path":"/blog/ssl","title":"SSL"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}