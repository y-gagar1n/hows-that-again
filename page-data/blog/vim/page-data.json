{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/vim","webpackCompilationHash":"fcc3abb4e22eb64fcf6e","result":{"data":{"markdownRemark":{"html":"<h1>Vim</h1>\n<p><a href=\"https://vim.rtorr.com\">https://vim.rtorr.com</a></p>\n<p>Во всех записях шорткатов буква <strong>С</strong> означает кнопку <em>Ctrl</em>. Например, <code class=\"language-text\">&lt;C-q&gt;</code> означает <code class=\"language-text\">Ctrl+q</code>.</p>\n<p>Буква <strong>S</strong> означает кнопку <em>Shift</em>. Например, <code class=\"language-text\">&lt;S-w&gt;</code> означает <code class=\"language-text\">Shift+w</code>.</p>\n<h2>Основные клавиши</h2>\n<ul>\n<li><code class=\"language-text\">H</code> - наверх экрана</li>\n<li><code class=\"language-text\">M</code> - в середину экрана</li>\n<li><code class=\"language-text\">L</code> - в низ экрана</li>\n<li><code class=\"language-text\">w</code> - к началу следующего слова</li>\n<li><code class=\"language-text\">e</code> - к концу следующего окна</li>\n<li><code class=\"language-text\">b</code> - назад к началу текущего слова</li>\n<li><code class=\"language-text\">0</code> - к началу строки</li>\n<li><code class=\"language-text\">^</code> - к первому значимому символу строки</li>\n<li><code class=\"language-text\">$</code> - к концу строки</li>\n<li><code class=\"language-text\">&lt;C-d&gt;</code> - вниз на пол-экрана</li>\n<li><code class=\"language-text\">&lt;C-f&gt;</code> - вниз на экран</li>\n<li><code class=\"language-text\">&lt;C-u&gt;</code> - вверх на пол-экрана</li>\n<li><code class=\"language-text\">&lt;C-b&gt;</code> - вверх на экран</li>\n<li><code class=\"language-text\">*</code> - подсветить все вхождения слова, на которое указывает курсор</li>\n<li><code class=\"language-text\">&lt;C-g&gt;</code> - показать полный путь текущего файла</li>\n</ul>\n<h2>NerdTree</h2>\n<p>Дерево слева обеспечивается плагином <code class=\"language-text\">scrooloose/nerdtree</code>.</p>\n<p>Открывается командой <code class=\"language-text\">:NERDTreeToggle</code>. Она замаплена на <code class=\"language-text\">Ctrl+n</code></p>\n<p>Когда фокус внутри дерева, справка вызывается кнопкой <code class=\"language-text\">?</code>.</p>\n<p>Основные команды:</p>\n<ul>\n<li><code class=\"language-text\">o</code> - открыть файл и перенести фокус на него</li>\n<li><code class=\"language-text\">go</code> - открыть файл, но фокус оставить в дереве</li>\n<li><code class=\"language-text\">t</code> - открыть в новой вкладке</li>\n<li><code class=\"language-text\">T</code> - открыть в новой вкладке, но не перключаться на нее</li>\n<li><code class=\"language-text\">[g]i</code> - разделить экран горизонтально, открыть файл в новой области</li>\n<li><code class=\"language-text\">[g]s</code> - разделить экран вертикально, открыть файл в новой области</li>\n<li><code class=\"language-text\">O</code> - рекурсивно открыть папку, то есть открыть и все ее подпапки до листьев</li>\n<li><code class=\"language-text\">x</code> - закрыть родителя</li>\n<li><code class=\"language-text\">X</code> - рекурсивно закрыть всех детей</li>\n<li><code class=\"language-text\">p</code> - перейти в дереве к родителю</li>\n<li><code class=\"language-text\">P</code> - перейти в дереве к корню проекта</li>\n<li><code class=\"language-text\">&lt;C-j&gt;</code> - перейти к предыдущему брату</li>\n<li><code class=\"language-text\">&lt;C-k&gt;</code> - перейти к следующему брату</li>\n<li><code class=\"language-text\">r</code> - обновить содержимое директории</li>\n<li><code class=\"language-text\">R</code> - обновить все дерево</li>\n<li><code class=\"language-text\">I</code> - показать/скрыть скрытые файлы</li>\n<li><code class=\"language-text\">A</code> - развернуть дерево на весь экран</li>\n<li><code class=\"language-text\">m</code> - открыть меню манипуляций с файлом, в нем потом перемещаться кнопками <code class=\"language-text\">j/k</code>, на текущий пункт указывает знак <code class=\"language-text\">&gt;</code> слева от пункта.</li>\n</ul>\n<h2>Окна, вкладки, сплиты</h2>\n<p>Окна - это области, на которые разделена текущая вкладка.</p>\n<h3>Работа с окнами/сплитами</h3>\n<ul>\n<li><code class=\"language-text\">&lt;C-w&gt;s</code> - разделить текущий буфер вертикально</li>\n<li><code class=\"language-text\">&lt;C-w&gt;v</code> - разделить текущий буфер горизонтально</li>\n<li><code class=\"language-text\">&lt;C-w&gt;q</code> - закрыть текущее окно</li>\n<li><code class=\"language-text\">&lt;C-w&gt;[hjkl]</code> - переход по соседним окнам</li>\n<li><code class=\"language-text\">&lt;C-w&gt;&lt;S-[&lt;&gt;+-]&gt;</code> - ресайзит текущее окно. По умолчанию резайсит на 1 позицию курсора. Если нужно много, то предварять комбинацию числом.</li>\n<li><code class=\"language-text\">:resize -10/+10/10</code> - уменьшить/увеличить/установить высоту текущего окна на 10</li>\n<li><code class=\"language-text\">:vertical resize -10/+10/10</code> - уменьшить/увеличить/установить ширину текущего окна на 10</li>\n<li><code class=\"language-text\">z10&lt;Enter&gt;</code> - установить высоту текущего окна в 10</li>\n<li><code class=\"language-text\">&lt;C-w&gt;|</code> - установить ширину текущего окна на максимум</li>\n<li><code class=\"language-text\">&lt;C-w&gt;=</code> - установить всем окна равные размеры</li>\n<li><code class=\"language-text\">set winwidth=130</code> - при переключении на окно ему будет выставляться ширина 130, если была меньше</li>\n</ul>\n<p>Когда разделяем окно, в новом оказывается то же содержимое, что и было до разделения. После этого выбрать новый буфер в нем можно кнопками перехода по буферам <code class=\"language-text\">&lt;S-[jk]&gt;</code>.</p>\n<h3>Работа с вкладками</h3>\n<p>В каждой вкладке может быть открыт любой из буферов. В виме нет жесткой привязки вкладка-файл, как в других браузерах. Когда нажимаем <code class=\"language-text\">&lt;C-w&gt;q</code>, то закрывается текущая вкладка. Если она последняя, то закроется и весь <code class=\"language-text\">vi</code>, независимо от того, сколько осталось открытых буферов.</p>\n<ul>\n<li><code class=\"language-text\">:tabnew filename</code> - открыть новую вкладку</li>\n<li><code class=\"language-text\">:tabclose</code> - закрыть текущую вкладку</li>\n<li><code class=\"language-text\">:tabonly</code> - закрыть все остальные вкладки</li>\n<li><code class=\"language-text\">gt</code> - перейти в следующую вкладку</li>\n<li><code class=\"language-text\">gT</code> - перейти в предыдущую вкладку </li>\n<li><code class=\"language-text\">{i}gt</code> - перейти во вкладку номер <strong>i</strong> (нумерация с 1)</li>\n</ul>\n<h3>Работа с буферами</h3>\n<ul>\n<li><code class=\"language-text\">:ls</code> - список буферов</li>\n<li><code class=\"language-text\">:bd n</code> - закрыть и удалить из списка буфер n</li>\n<li><code class=\"language-text\">:b n</code> - открыть буфер n</li>\n<li><code class=\"language-text\">:bn</code> - следующий буфер</li>\n<li><code class=\"language-text\">:bp</code> - предыдущий буфер</li>\n<li><code class=\"language-text\">&lt;S-j&gt;</code> - перейти в следующий буфер</li>\n<li><code class=\"language-text\">&lt;S-k&gt;</code> - перейти в предыдущий буфер</li>\n<li><code class=\"language-text\">gd</code> - закрыть текущий буфер</li>\n</ul>\n<h2>Навигация по коду</h2>\n<ul>\n<li><code class=\"language-text\">&lt;C-yh&gt;</code> - перейти к реализации или объявлению, если не удалось к реализации</li>\n<li><code class=\"language-text\">&lt;C-yd&gt;</code> - перейти к объявлению</li>\n<li><code class=\"language-text\">&lt;C-yi&gt;</code> - перейти к заголовочному файлу из <code class=\"language-text\">#include</code></li>\n<li><code class=\"language-text\">&lt;C-yt&gt;</code> - вывести тип переменной</li>\n<li><code class=\"language-text\">&lt;C-yd&gt;</code> - вывести документацию</li>\n<li><code class=\"language-text\">&lt;C-yf&gt;</code> - исправить ошибку в текущей строке, если возможно</li>\n<li><code class=\"language-text\">&lt;C-o&gt;</code> - вернуться назад</li>\n<li><code class=\"language-text\">&lt;C-i&gt;</code> - перейти вперед</li>\n</ul>\n<h3>Поиск</h3>\n<ul>\n<li><code class=\"language-text\">&lt;C-p&gt;</code> - вывести окошко поиска по файла по пути</li>\n<li><code class=\"language-text\">Enter</code> - открыть выбранный файл в текущей вкладке (будет создан новый буффер, буфер открытый прежде в этой вкладке останется открытым)</li>\n<li><code class=\"language-text\">&lt;C-t&gt;</code> - открыть выбранный файл в новой вкладке</li>\n<li><code class=\"language-text\">&lt;C-v&gt;</code> - открыть выбранный файл в новом вертикальном сплите</li>\n<li><code class=\"language-text\">&lt;C-x&gt;</code> - открыть выбранный файл в новом горизонтальном сплите</li>\n</ul>\n<h3>Системные шорткаты</h3>\n<ul>\n<li><code class=\"language-text\">&lt;Leader&gt;ev</code> - открыть vimrc</li>\n<li><code class=\"language-text\">&lt;Leader&gt;rv</code> - перезагрузить vimrc</li>\n</ul>\n<h3>Запуск shell-команды</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">:! ls ~</code></pre></div>\n<h3>Edit-compile-edit</h3>\n<p>Если есть Makefile, то построить проект можно с <code class=\"language-text\">:make</code>. Очистить предыдущие результаты можно с <code class=\"language-text\">:make clean</code>.</p>\n<p>После построения ошибки попадают в окно QuickFix. Его можно вывести через <code class=\"language-text\">:cwindow</code> или <code class=\"language-text\">:cw</code>. Оно работает как обычное окно, только по Enter можно переходить к строчкам с ошибками.</p>\n<ul>\n<li><code class=\"language-text\">:set makeprg?</code> - программа, которая будет использоваться для построения.</li>\n<li><code class=\"language-text\">:cn</code> - следующая ошибка в QuickFix</li>\n<li><code class=\"language-text\">:cp</code> - предыдущая ошибка в QuickFix</li>\n</ul>\n<h4>Python</h4>\n<p>Чтобы ошибки питона тоже выводились в quickfix, нужно подключить нужный встроеенный компилятор и указать makeprg:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">:compiler pyunit\n:set makeprg=python\\ %  \n:make</code></pre></div>\n<p>Строчкой <code class=\"language-text\">python\\ %</code> мы указали, что нужно вызвать python, подав аргументом путь к текущему файлу.</p>\n<h2>Прочее</h2>\n<p>К виму не относится, но не знаю куда еще сунуть - в маковском терминале чтобы выделить текст и скопировать его в буфер обмена, нужно его выделять с зажатым <code class=\"language-text\">Fn</code>, а потом жать <code class=\"language-text\">Ctrl+C</code>.</p>","frontmatter":{"path":"/blog/vim","title":"Vim"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}