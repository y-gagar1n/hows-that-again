webpackJsonp([0xe03050f36dc7],{435:function(e,a){e.exports={data:{markdownRemark:{html:'<h1>Debian</h1>\n<h2>CD-ROM</h2>\n<p>После установки при манипуляциях с <code class="language-text">apt-get</code> часто спрашивает cd-rom. Чтобы от этого избавиться, нужно отредактировать файл <code class="language-text">/etc/apt/sources.list</code> и удалить оттуда строчку, начинающуюся с <code class="language-text">deb cdrom</code></p>\n<h2>Тачпад</h2>\n<p>После установки не работал левый клик по нажатию на тачпад. Решение - подключить мышь, зайти в Settings -> Mouse и включить там Tap To Click</p>\n<h2>Ctrl-Alt-T</h2>\n<p>Чтобы назначить вызов консоли по шорткату ctrl-alt-t, нужно зайти в Settings-Keyboard и создать новый шорткат для команды <code class="language-text">gnome-terminal</code></p>\n<h2>sudo</h2>\n<p>После установки <code class="language-text">sudo</code> в системе отсутствует. Нужно сделать:\n<br>\n<br>\nsu\napt install sudo\n</p>\n<h2>apt-get</h2>\n<p>Если не может найти многих пакетов, то нужно отредактировать <code class="language-text">/etc/apt/sources.list</code> и добавить туда источники:\n<br>\n<br>\ndeb <a href="http://deb.debian.org/debian/">http://deb.debian.org/debian/</a> stretch-updates main non-free\ndeb-src <a href="http://deb.debian.org/debian/">http://deb.debian.org/debian/</a> stretch-updates main non-free\n</p>\n<h2>Alt-Shift</h2>\n<p>Чтобыустановить смену раскладки на Alt+Shift,нужно:</p>\n<p>Tweak tool >> Typing >> Modifiers of input sources switch >> Alt shift.</p>\n<h2>DNS</h2>\n<p>Прописывается в файле <strong>/etc/resolv.conf</strong></p>\n<p>Чтобы добавить туда новый DNS-server, нужно дописать:\n<br>\nnameserver 8.8.8.8\n</p>\n<h2>Переменные окружения и оболочки</h2>\n<p>Переменные оболочки (shell variables) работают только в шелле.</p>\n<h3>Установка переменной оболочки</h3>\n<p><code class="language-text">KEY=value</code></p>\n<h3>Чтение переменной оболочки</h3>\n<p><code class="language-text">$KEY</code></p>\n<h3>Установка переменной окружения</h3>\n<p>Осуществляется через экспорт переменной оболочки:\n<br>\n<br>\nKEY=value\nexport KEY\n</p>\n<p>Можно объединить в одну строчку:</p>\n<p><code class="language-text">export KEY=value</code></p>\n<h3>Снятие переменной окружения</h3>\n<p><code class="language-text">export -n KEY</code></p>\n<h3>Вывод всех переменных окружения</h3>\n<p><code class="language-text">printenv</code></p>\n<p>Установка будет работать только на текущий сеанс. Если нужно установить навсегда, то можно так:</p>\n<p><code class="language-text">nano ~/.profile</code></p>\n<p>и в этом файле добавлять свои переменные в обычном формате</p>\n<h2>Распаковка архива</h2>\n<p><code class="language-text">tar -xvf file.tar</code></p>\n<p>Если имеет расширение <strong>.tar.gz</strong> , то:</p>\n<p><code class="language-text">tar -xzvf file.tar.gz</code></p>\n<p>Если <strong>.tar.bz2</strong> :</p>\n<p><code class="language-text">tar -xjvf file.tar.bz2</code></p>\n<p><strong>-x</strong> : распаковка архива</p>\n<p><strong>-v</strong> : verbose-вывод и показ прогресса</p>\n<p><strong>-f</strong> : из файла</p>\n<p><strong>-j</strong> : архив bzip2</p>\n<p><strong>-z</strong> : архив gzip</p>\n<p>Если нужно экстрактнуть 1 файл, то:</p>\n<p><code class="language-text">tar -xvf file.tar foo.txt</code></p>\n<h2>Поиск файлов, установленных пакетом</h2>\n<p><code class="language-text">dpkg -L &lt;имя пакета&gt;</code></p>\n<p>Пример: </p>\n<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> yasm \ndpkg -L yasm</code></pre></div>\n<h2>Поиск пакета, установившего файл</h2>\n<p><code class="language-text">dpkg -S /usr/lib/python3.4/bz2.py</code></p>\n<h2>Поиск пакета, содержащего файл</h2>\n<p>Ищет даже по не установленным пакетам, то есть можно использовать, когда нужно узнать, какой пакет нужно установить для отсутствующего заголовка или утилиты.</p>\n<p><code class="language-text">apt-file search pkg.h</code></p>\n<h2>Алиасы</h2>\n<p>Чтобы сохранить алиас навсегда, его нужно писать в:\n<br>\nsudo nano ~/.bashrc\n</p>\n<h2>Вывод процессов, отжирающих больше всего памяти</h2>\n<p><code class="language-text">ps aux --sort=-%mem | head</code></p>\n<h2>Убить все процессы питона</h2>\n<p><code class="language-text">pkill -9 python</code></p>\n<h2>Показать, сколько осталось свободной памяти</h2>\n<p><code class="language-text">free -m</code></p>\n<p>В колонке available показано, сколько памяти доступно процессам</p>\n<h2>Почта</h2>\n<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">apt-get install mailutils ssmtp\nnano /etc/ssmtp/smtp.conf</code></pre></div>\n<p>Там вписать строчки:\n<br>\n<br>\nroot=yuriy.timofeev@vocord\nmailhub=smtp.gmail.com:465\nFromLineOverride=YES\nAuthUser=yuriy.timofeev@vocord.ru\nAuthPass=testing123\nUseTLS=YES\n</p>\n<p>Отправка письма:\n<br>\n<br>\necho "Тело письма" | mail -s "Пришел" -a "From: Юрий Тимофеев&#x3C;yuriy.timofeev@vocord.ru>" yuriy.timofeev@vocord.ru\n</p>\n<h2>Установка deb-пакетов</h2>\n<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">dpkg -i &amp;lt;name&amp;gt;.deb\nsudo apt-get -f install</code></pre></div>\n<p>После первой строчки может выдать ошибки - не волноваться, вторая все исправит.</p>\n<h2>apt-get</h2>\n<p>Запустить симуляцию установки:\n<br>\n<br>\napt-get install -s PACKAGE\n</p>\n<p>Вывод установленной версии пакета:\n<br>\n<br>\napt-cache policy PACKAGE\n</p>\n<h2>gcc</h2>\n<p>Вывод всех папок, в которых gcc ищет хидеры:\n<br>\n<br>\nLC<em>ALL=C gcc -v -E -xc - &#x3C; /dev/null 2>&#x26;1 |\nLC</em>ALL=C sed -ne \'/starts here/,/End of/p\'\n</p>\n<h2>find</h2>\n<p>Поиск файла по всей файловой системе: </p>\n<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">find / -name FILENAME -print 2&gt;/dev/null</code></pre></div>\n<h2>Вывод процесса, занимающего порт:</h2>\n<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">lsof -i -P -n | grep :&lt;port&gt;;</code></pre></div>\n<h2>Вывод .so, которые нужны библиотеке и путей, по которым она их ищет:</h2>\n<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">ldd file.so</code></pre></div>\n<h2>Вывод размера директории:</h2>\n<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">du -k DIRECTORY</code></pre></div>\n<p>-k выводит размер в килобайтах -b, -m - в байтах и мегабайтах, соответственно</p>\n<h2>Установка прокси</h2>\n<p>Нужно установить две переменные окружения:\n<br>\n<br>\nexport HTTP<em>PROXY=<a href="http://192.168.2.102:3128">http://192.168.2.102:3128</a>\nexport HTTPS</em>PROXY=<a href="http://192.168.2.102:3128">http://192.168.2.102:3128</a>\n</p>\n<p><strong>ВАЖНО</strong>, чтобы схема (http://) присутсвовала в адресе, иначе, например, питоновский urlparse может тупить (было такое в geeknote)</p>\n<h2>Вывод флагов компиляции для установленной библиотеки</h2>\n<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">pkg-config --cflags --libs LIBRARY_NAME</code></pre></div>\n<p>Пример использования:</p>\n<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">gcc -Wall -o main main.cpp <span class="token variable"><span class="token variable">$(</span>pkg-config --cflags --libs gstreamer-1.0<span class="token variable">)</span></span></code></pre></div>\n<p>После выполнения выражения, получим:</p>\n<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">gcc -Wall -o main main.cpp -pthread -I/usr/include/gstreamer-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -lgstreamer-1.0 -lgobject-2.0 -lglib-2.0</code></pre></div>\n<p><code class="language-text">pkgconfig</code> знает только про те либы, для которых есть <strong>pc</strong> файл в одной из его поисковых директорий. Список таких директорий можно узнать командой:</p>\n<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">pkg-config --variable pc_path pkg-config</code></pre></div>\n<h2>Поиск библиотеки на диске</h2>\n<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">ldconfig -p <span class="token operator">|</span> <span class="token function">grep</span> gstreamer</code></pre></div>\n<p>Выведет путь к либе, если найдет такую.</p>',frontmatter:{path:"/blog/debian",title:"Debian"}}},pathContext:{}}}});
//# sourceMappingURL=path---blog-debian-8c0de52efafae3b00dd1.js.map