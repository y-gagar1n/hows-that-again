{"version":3,"sources":["webpack:///path---blog-sql-recursive-cte-e309358783bcfe2098be.js","webpack:///./.cache/json/blog-sql-recursive-cte.json"],"names":["webpackJsonp","492","module","exports","data","markdownRemark","html","frontmatter","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,ikFAAgjCC,aAAypDC,KAAA,0BAAAC,MAAA,uBAA+DC","file":"path---blog-sql-recursive-cte-e309358783bcfe2098be.js","sourcesContent":["webpackJsonp([30778352477470],{\n\n/***/ 492:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>SQL recursive CTE</h1>\\n<p>The general syntax for a recursive CTE is:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"sql\\\"><pre class=\\\"language-sql\\\"><code class=\\\"language-sql\\\"><span class=\\\"token keyword\\\">WITH</span> cte_name <span class=\\\"token punctuation\\\">(</span>column1<span class=\\\"token punctuation\\\">,</span> column2<span class=\\\"token punctuation\\\">,</span> …<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">div</span><span class=\\\"token operator\\\">></span>\\n<span class=\\\"token keyword\\\">AS</span>\\n<span class=\\\"token punctuation\\\">(</span>\\n\\tcte_query_definition <span class=\\\"token comment\\\">-- Anchor member&lt;/div></span>\\n\\t<span class=\\\"token keyword\\\">UNION</span> <span class=\\\"token keyword\\\">ALL</span>\\n\\tcte_query_definition <span class=\\\"token comment\\\">-- Recursive member; references cte_name.&lt;/div></span>\\n<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">-- Statement using the CTE&lt;/div></span>\\n<span class=\\\"token keyword\\\">SELECT</span> <span class=\\\"token operator\\\">*</span>\\n<span class=\\\"token keyword\\\">FROM</span> cte_name\\n<span class=\\\"token keyword\\\">with</span> cte <span class=\\\"token keyword\\\">as</span>\\n<span class=\\\"token punctuation\\\">(</span>\\n\\t<span class=\\\"token keyword\\\">select</span> id<span class=\\\"token punctuation\\\">,</span> lastname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token keyword\\\">as</span> lev <span class=\\\"token keyword\\\">from</span> dbo<span class=\\\"token punctuation\\\">.</span>Employee <span class=\\\"token keyword\\\">where</span> ReportsTo <span class=\\\"token operator\\\">is</span> <span class=\\\"token boolean\\\">null</span>\\n\\t<span class=\\\"token keyword\\\">union</span> <span class=\\\"token keyword\\\">all</span>\\n\\t<span class=\\\"token keyword\\\">select</span> e<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span> e<span class=\\\"token punctuation\\\">.</span>lastname<span class=\\\"token punctuation\\\">,</span> lev <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token keyword\\\">from</span> dbo<span class=\\\"token punctuation\\\">.</span>Employee e <span class=\\\"token keyword\\\">join</span> cte\\n\\t<span class=\\\"token keyword\\\">on</span> e<span class=\\\"token punctuation\\\">.</span>ReportsTo <span class=\\\"token operator\\\">=</span> cte<span class=\\\"token punctuation\\\">.</span>ID\\n<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">select</span> lastname<span class=\\\"token punctuation\\\">,</span> lev <span class=\\\"token keyword\\\">from</span> cte</code></pre></div>\",\"frontmatter\":{\"path\":\"/blog/sql-recursive-cte\",\"title\":\"SQL recursive CTE\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-sql-recursive-cte-e309358783bcfe2098be.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>SQL recursive CTE</h1>\\n<p>The general syntax for a recursive CTE is:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"sql\\\"><pre class=\\\"language-sql\\\"><code class=\\\"language-sql\\\"><span class=\\\"token keyword\\\">WITH</span> cte_name <span class=\\\"token punctuation\\\">(</span>column1<span class=\\\"token punctuation\\\">,</span> column2<span class=\\\"token punctuation\\\">,</span> …<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">div</span><span class=\\\"token operator\\\">></span>\\n<span class=\\\"token keyword\\\">AS</span>\\n<span class=\\\"token punctuation\\\">(</span>\\n\\tcte_query_definition <span class=\\\"token comment\\\">-- Anchor member&lt;/div></span>\\n\\t<span class=\\\"token keyword\\\">UNION</span> <span class=\\\"token keyword\\\">ALL</span>\\n\\tcte_query_definition <span class=\\\"token comment\\\">-- Recursive member; references cte_name.&lt;/div></span>\\n<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">-- Statement using the CTE&lt;/div></span>\\n<span class=\\\"token keyword\\\">SELECT</span> <span class=\\\"token operator\\\">*</span>\\n<span class=\\\"token keyword\\\">FROM</span> cte_name\\n<span class=\\\"token keyword\\\">with</span> cte <span class=\\\"token keyword\\\">as</span>\\n<span class=\\\"token punctuation\\\">(</span>\\n\\t<span class=\\\"token keyword\\\">select</span> id<span class=\\\"token punctuation\\\">,</span> lastname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token keyword\\\">as</span> lev <span class=\\\"token keyword\\\">from</span> dbo<span class=\\\"token punctuation\\\">.</span>Employee <span class=\\\"token keyword\\\">where</span> ReportsTo <span class=\\\"token operator\\\">is</span> <span class=\\\"token boolean\\\">null</span>\\n\\t<span class=\\\"token keyword\\\">union</span> <span class=\\\"token keyword\\\">all</span>\\n\\t<span class=\\\"token keyword\\\">select</span> e<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span> e<span class=\\\"token punctuation\\\">.</span>lastname<span class=\\\"token punctuation\\\">,</span> lev <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token keyword\\\">from</span> dbo<span class=\\\"token punctuation\\\">.</span>Employee e <span class=\\\"token keyword\\\">join</span> cte\\n\\t<span class=\\\"token keyword\\\">on</span> e<span class=\\\"token punctuation\\\">.</span>ReportsTo <span class=\\\"token operator\\\">=</span> cte<span class=\\\"token punctuation\\\">.</span>ID\\n<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">select</span> lastname<span class=\\\"token punctuation\\\">,</span> lev <span class=\\\"token keyword\\\">from</span> cte</code></pre></div>\",\"frontmatter\":{\"path\":\"/blog/sql-recursive-cte\",\"title\":\"SQL recursive CTE\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-sql-recursive-cte.json\n// module id = 492\n// module chunks = 30778352477470"],"sourceRoot":""}