{"version":3,"sources":["webpack:///path---blog-cs-sockets-02e7d3432d4dc8c69449.js","webpack:///./.cache/json/blog-cs-sockets.json"],"names":["webpackJsonp","415","module","exports","data","markdownRemark","html","frontmatter","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,ggCAA0/BC,aAAgCC,KAAA,mBAAAC,MAAA,gBAAiDC","file":"path---blog-cs-sockets-02e7d3432d4dc8c69449.js","sourcesContent":["webpackJsonp([258893317506230],{\n\n/***/ 415:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>C# sockets</h1>\\n<h2>Сервер</h2>\\n<pre><code class=\\\"language-csharp\\\">using System;\\nusing System.IO;\\nusing System.Net;\\nusing System.Net.Sockets;\\n\\nnamespace HttpServer\\n{\\n    class Program\\n    {\\n        static void Main(string[] args)\\n        {\\n            Socket s = new Socket(SocketType.Stream, ProtocolType.Tcp); \\n            s.Bind(new IPEndPoint(IPAddress.Loopback, 5000)); \\n            s.Listen(10); \\n            var q = s.Accept(); \\n            var buf = new byte[3]; \\n            q.Receive(buf);\\n        }\\n    }\\n}\\n</code></pre>\\n<h2>Клиент</h2>\\n<pre><code class=\\\"language-csharp\\\">using System;\\nusing System.Net;\\nusing System.Net.Sockets;\\n\\nnamespace HttpClient\\n{\\n    class Program\\n    {\\n        static void Main(string[] args)\\n        { \\n            var socket = new Socket(SocketType.Stream, ProtocolType.Tcp); \\n            socket.Connect(IPAddress.Loopback, 5000); \\n            var buf = new byte[] {1, 2, 3}; \\n            socket.Send(buf);\\n        }\\n    }\\n}\\n</code></pre>\",\"frontmatter\":{\"path\":\"/blog/cs-sockets\",\"title\":\"C# sockets\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-cs-sockets-02e7d3432d4dc8c69449.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>C# sockets</h1>\\n<h2>Сервер</h2>\\n<pre><code class=\\\"language-csharp\\\">using System;\\nusing System.IO;\\nusing System.Net;\\nusing System.Net.Sockets;\\n\\nnamespace HttpServer\\n{\\n    class Program\\n    {\\n        static void Main(string[] args)\\n        {\\n            Socket s = new Socket(SocketType.Stream, ProtocolType.Tcp); \\n            s.Bind(new IPEndPoint(IPAddress.Loopback, 5000)); \\n            s.Listen(10); \\n            var q = s.Accept(); \\n            var buf = new byte[3]; \\n            q.Receive(buf);\\n        }\\n    }\\n}\\n</code></pre>\\n<h2>Клиент</h2>\\n<pre><code class=\\\"language-csharp\\\">using System;\\nusing System.Net;\\nusing System.Net.Sockets;\\n\\nnamespace HttpClient\\n{\\n    class Program\\n    {\\n        static void Main(string[] args)\\n        { \\n            var socket = new Socket(SocketType.Stream, ProtocolType.Tcp); \\n            socket.Connect(IPAddress.Loopback, 5000); \\n            var buf = new byte[] {1, 2, 3}; \\n            socket.Send(buf);\\n        }\\n    }\\n}\\n</code></pre>\",\"frontmatter\":{\"path\":\"/blog/cs-sockets\",\"title\":\"C# sockets\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-cs-sockets.json\n// module id = 415\n// module chunks = 258893317506230"],"sourceRoot":""}