{"version":3,"sources":["webpack:///path---blog-swig-2cbe0b7c6b6e1e3d1ec3.js","webpack:///./.cache/json/blog-swig.json"],"names":["webpackJsonp","490","module","exports","data","markdownRemark","html","frontmatter","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,qsBAAAC,aAA6tBC,KAAA,aAAAC,MAAA,UAAqCC","file":"path---blog-swig-2cbe0b7c6b6e1e3d1ec3.js","sourcesContent":["webpackJsonp([34503133861313],{\n\n/***/ 490:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>SWIG</h1>\\n<h2>Python - C++</h2>\\n<p>Чтобы передать внутрь функции массив:</p>\\n<pre><code>///example.i\\n%include \\\"carrays.i\\\"\\n...\\n%array_class(int, intArray)\\n</code></pre>\\n<p>В .py сгенерятся функции для работы с массивами, пример использования:</p>\\n<pre><code>import example\\n\\narr = example.intArray(3)\\nfor i in range(3):\\n    arr[i] = i\\n\\narr2 = example.intArray_frompointer(example.transform(arr, 3))\\nfor i in range(3):\\n    print(arr2[i])\\n</code></pre>\\n<p>Здесь используются функции intArray и intArray_frompointer, так как функция transform возвращает int*</p>\\n<h2>cdata.i</h2>\\n<p>cdata преобразует intArray в питоновский str</p>\\n<p>memmove преобразует питоновский str в intArray</p>\",\"frontmatter\":{\"path\":\"/blog/swig\",\"title\":\"SWIG\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-swig-2cbe0b7c6b6e1e3d1ec3.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>SWIG</h1>\\n<h2>Python - C++</h2>\\n<p>Чтобы передать внутрь функции массив:</p>\\n<pre><code>///example.i\\n%include \\\"carrays.i\\\"\\n...\\n%array_class(int, intArray)\\n</code></pre>\\n<p>В .py сгенерятся функции для работы с массивами, пример использования:</p>\\n<pre><code>import example\\n\\narr = example.intArray(3)\\nfor i in range(3):\\n    arr[i] = i\\n\\narr2 = example.intArray_frompointer(example.transform(arr, 3))\\nfor i in range(3):\\n    print(arr2[i])\\n</code></pre>\\n<p>Здесь используются функции intArray и intArray_frompointer, так как функция transform возвращает int*</p>\\n<h2>cdata.i</h2>\\n<p>cdata преобразует intArray в питоновский str</p>\\n<p>memmove преобразует питоновский str в intArray</p>\",\"frontmatter\":{\"path\":\"/blog/swig\",\"title\":\"SWIG\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-swig.json\n// module id = 490\n// module chunks = 34503133861313"],"sourceRoot":""}