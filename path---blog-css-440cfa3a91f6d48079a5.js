webpackJsonp([0xe3124748ad1d],{397:function(e,o){e.exports={data:{markdownRemark:{html:'<h1>CSS</h1>\n<h2>Базовый дизайн страницы</h2>\n<p>По мотивам <a href="https://jgthms.com/web-design-in-4-minutes/#font-family">https://jgthms.com/web-design-in-4-minutes/#font-family</a></p>\n<pre><code class="language-css">body {\n  margin: 0 auto;\n  max-width: 50em;\n  font-family: "Helvetica", "Arial", sans-serif;\n  line-height: 1.5;\n  padding: 4em 1em;\n  color: #555;\n}\n\nh2 {\n  margin-top: 1em;\n  padding-top: 1em;\n}\n\nh1,\nh2,\nstrong {\n  color: #333;\n}\n\ncode,\npre {\n  background: #eee;\n}\n\ncode {\n  padding: 2px 4px;\n  vertical-align: text-bottom;\n}\n\npre {\n  padding: 1em;\n}\n</code></pre>\n<h2>display</h2>\n<h3>block</h3>\n<p>Блочные элементы</p>\n<p>Начинаются с новой строки и занимают всю доступную ширину.</p>\n<p>К блочным элементам относятся: <code>div</code>, <code>p</code>, <code>form</code>, <code>li</code>, <code>header</code>, <code>footer</code>, <code>section</code> и другие.</p>\n<h3>inline</h3>\n<p>Строчные элементы</p>\n<p>Вставляются в абзац, не нарушая его структуры. К строчным относятся <code>span</code>, <code>a</code>.</p>\n<h3>none</h3>\n<p>Элемент не показывается, как будто бы не существует (в случае <code>visibility:hidden</code> элемент продолжает занимать место, просто становится невидим).</p>\n<h2>margin:auto</h2>\n<p>При установке блочному элементу левого и правого марджина в <code>auto</code> он автоматически центруется по горизонтали.</p>\n<h2>max-width</h2>\n<p>Если установить блоку абсолютный <code>width</code>, то при уменьшении размера браузера появится горизонтальный скролл. Поэтому лучше указывать <code>max-width</code>, тогда блок будет стремиться занять указанную ширину, но сжиматься, если не умещается.</p>\n<h2>box model</h2>\n<p>Размеры <code>padding</code> и <code>border</code> выходят за пределы указанных размеров <code>width</code> и <code>height</code>. То есть если указано:</p>\n<pre><code class="language-css">width: 50px;\nborder: 1px solid;\npadding: 5px;\n</code></pre>\n<p>То реальная ширина элемента будет 57 пикселей (50+1+1+5)</p>\n<p>Чтобы этого не происходило, можно указать:</p>\n<pre><code class="language-css">box-sizing:border-box;\n</code></pre>\n<p>Тогда у элемента будет ширина ровно 50 пикселей.</p>\n<h2>position</h2>\n<h3>static</h3>\n<p>Значение по умолчанию.</p>\n<h3>relative</h3>\n<p>Ведет себя как <code>static</code>, пока не будут добавлены <code>top</code>, <code>right</code>, <code>bottom</code> или <code>left</code>. Они позволяют сдвигать положение элемента относительно его изначального расположения. При этом все элементы вокруг двигаться не будут и будут располагаться так, как будто все эти свойства равны нулю.</p>\n<p>Помимо этого, <code>position:relative</code> позволяет использовать <code>z-index</code>. <strong>Без <code>position:relative</code> <code>z-index</code> работать не будет!</strong></p>\n<h2>fixed</h2>\n<p>Занимает фиксированное положение на экране. Можно задать расположеное элементами <code>top</code>, <code>right</code>, <code>bottom</code> или <code>left</code>.</p>\n<h2>absolute</h2>\n<p>Ведет себя как <code>fixed</code> за исключением того, что позиционирование отсчитывается относительно <em>ближайшего родителя с position != static</em>. Если такого родителя нет, то считается относительно окна браузера.</p>\n<p>Помимо этого, элемент "исключается" из нормальной структуры документа, то есть остальные элементы будут вести себя так, как будто его нет на странице!</p>\n<h2>float</h2>\n<p>Предназначен для обертывания текста вокруг изображений. При его использовании получается следующее:</p>\n<ul>\n<li>нижеследующие элементы без <code>float</code> позиционируются, как будто элемента с <code>float</code> не существует.</li>\n<li>однако текст в них "обтекает" элемент с <code>float</code>.</li>\n<li>при этом обтекание текста происходит так, будто элементы, содержащие текст, никуда не позиционировались! </li>\n<li>каждый нижеследующий элемент с <code>float</code> обтекает предыдущий</li>\n</ul>\n<p>Чтобы действие элемента с <code>float</code> прекратилось, нужно указать свойство <code>clear:[left|right|both]</code> тому элементу, начиная с которого обтекать больше не нужно. </p>\n<h2>media queries</h2>\n<pre><code class="language-css">@media screen and (min-width:600px) {\n    ...\n}\n\n@media screen and (max-width:599px) {\n    ...\n}\n</code></pre>\n<p>Список таргетов для медиа-запросов: <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media#Media_features">https://developer.mozilla.org/en-US/docs/Web/CSS/@media#Media_features</a></p>\n<h2>inline-block</h2>\n<p>Похожи на <code>inline</code> элементы, но имеют ширину и высоту.</p>',frontmatter:{path:"/blog/css",title:"CSS"}}},pathContext:{}}}});
//# sourceMappingURL=path---blog-css-440cfa3a91f6d48079a5.js.map