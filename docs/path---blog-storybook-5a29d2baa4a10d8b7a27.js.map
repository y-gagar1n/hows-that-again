{"version":3,"sources":["webpack:///path---blog-storybook-5a29d2baa4a10d8b7a27.js","webpack:///./.cache/json/blog-storybook.json"],"names":["webpackJsonp","440","module","exports","data","markdownRemark","html","frontmatter","path","title","pathContext"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,2mCAAwmCC,aAAgCC,KAAA,kBAAAC,MAAA,eAA+CC","file":"path---blog-storybook-5a29d2baa4a10d8b7a27.js","sourcesContent":["webpackJsonp([1112656806016],{\n\n/***/ 440:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Storybook</h1>\\n<h2>PostCSS</h2>\\n<p> Если нужно задать свои правила для postcss, то создаем <code>.storybook/webpack.config.js</code> со следующим содержанием:</p>\\n<pre><code class=\\\"language-js\\\">const path = require('path');\\n\\nmodule.exports = (baseConfig, env, defaultConfig) => {\\n    // это нужно, чтобы настройка webpack для storybook подхватывала переменные scss\\n    // storybook api не позволяет расширить существующий конфиг, поэтому приходится в рантайме менять дефолтный\\n    // все, что мы здесь делаем - это грохаем дефолтный конфиг postcss и указываем ему на свой, лежащий в корне\\n    try{\\n        var cssRule = defaultConfig.module.rules.filter(r => r.test.toString() == \\\"/\\\\\\\\.css$/\\\")[0];\\n        var postcssLoader = cssRule.use.filter(l => l.loader &#x26;&#x26; l.loader.includes(\\\"postcss-loader\\\"))[0];\\n        postcssLoader.options = { config: { path: path.join(__dirname, \\\"..\\\") }};\\n        return defaultConfig;\\n    }\\n    catch(err)\\n    {\\n        console.log(\\\"\\\\nSomething wrong happened while trying to configure storybook's webpack.config\\\");\\n        throw err;\\n    }\\n  };\\n</code></pre>\",\"frontmatter\":{\"path\":\"/blog/storybook\",\"title\":\"Storybook\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---blog-storybook-5a29d2baa4a10d8b7a27.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Storybook</h1>\\n<h2>PostCSS</h2>\\n<p> Если нужно задать свои правила для postcss, то создаем <code>.storybook/webpack.config.js</code> со следующим содержанием:</p>\\n<pre><code class=\\\"language-js\\\">const path = require('path');\\n\\nmodule.exports = (baseConfig, env, defaultConfig) => {\\n    // это нужно, чтобы настройка webpack для storybook подхватывала переменные scss\\n    // storybook api не позволяет расширить существующий конфиг, поэтому приходится в рантайме менять дефолтный\\n    // все, что мы здесь делаем - это грохаем дефолтный конфиг postcss и указываем ему на свой, лежащий в корне\\n    try{\\n        var cssRule = defaultConfig.module.rules.filter(r => r.test.toString() == \\\"/\\\\\\\\.css$/\\\")[0];\\n        var postcssLoader = cssRule.use.filter(l => l.loader &#x26;&#x26; l.loader.includes(\\\"postcss-loader\\\"))[0];\\n        postcssLoader.options = { config: { path: path.join(__dirname, \\\"..\\\") }};\\n        return defaultConfig;\\n    }\\n    catch(err)\\n    {\\n        console.log(\\\"\\\\nSomething wrong happened while trying to configure storybook's webpack.config\\\");\\n        throw err;\\n    }\\n  };\\n</code></pre>\",\"frontmatter\":{\"path\":\"/blog/storybook\",\"title\":\"Storybook\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/blog-storybook.json\n// module id = 440\n// module chunks = 1112656806016"],"sourceRoot":""}